cd build && make check
make[1]: Entering directory `/home/jin/Desktop/pintos_filesys/pintos_2015/src/filesys/build'
gcc -c ../../filesys/buffer_cache.c -o filesys/buffer_cache.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF filesys/buffer_cache.d
ld -T threads/kernel.lds.s -o kernel.o threads/start.o threads/init.o threads/thread.o threads/switch.o threads/interrupt.o threads/intr-stubs.o threads/synch.o threads/palloc.o threads/malloc.o devices/pit.o devices/timer.o devices/kbd.o devices/vga.o devices/serial.o devices/block.o devices/partition.o devices/ide.o devices/input.o devices/intq.o devices/rtc.o devices/shutdown.o devices/speaker.o lib/debug.o lib/random.o lib/stdio.o lib/stdlib.o lib/string.o lib/arithmetic.o lib/ustar.o lib/kernel/debug.o lib/kernel/list.o lib/kernel/bitmap.o lib/kernel/hash.o lib/kernel/console.o userprog/process.o userprog/pagedir.o userprog/exception.o userprog/syscall.o userprog/gdt.o userprog/tss.o filesys/filesys.o filesys/free-map.o filesys/file.o filesys/directory.o filesys/inode.o filesys/fsutil.o filesys/buffer_cache.o
objcopy -R .note -R .comment -S kernel.o kernel.bin
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/args-none -a args-none -- -q    -f run args-none < /dev/null 2> tests/userprog/args-none.errors |tee tests/userprog/args-none.output
Copying tests/userprog/args-none to scratch partition...
qemu -hda /tmp/ehUJKqL_Rw.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run args-none
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 101 sectors (50 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'args-none' into the file system...
Erasing ustar archive...
Executing 'args-none':
(args) begin
(args) argc = 1
(args) argv[0] = 'args-none'
(args) argv[1] = null
(args) end
args-none: exit(0)
Execution of 'args-none' complete.
Timer: 67 ticks
Thread: 0 idle ticks, 66 kernel ticks, 1 user ticks
hda2 (filesys): 56 reads, 206 writes
hda3 (scratch): 100 reads, 2 writes
Console: 942 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
perl -I../.. ../../tests/userprog/args-none.ck tests/userprog/args-none tests/userprog/args-none.result
pass tests/userprog/args-none
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/args-single -a args-single -- -q    -f run 'args-single onearg' < /dev/null 2> tests/userprog/args-single.errors |tee tests/userprog/args-single.output
Copying tests/userprog/args-single to scratch partition...
qemu -hda /tmp/T1CoYjq_eX.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run 'args-single onearg'
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 101 sectors (50 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'args-single' into the file system...
Erasing ustar archive...
Executing 'args-single onearg':
(args) begin
(args) argc = 2
(args) argv[0] = 'args-single'
(args) argv[1] = 'onearg'
(args) argv[2] = null
(args) end
args-single: exit(0)
Execution of 'args-single onearg' complete.
Timer: 74 ticks
Thread: 0 idle ticks, 74 kernel ticks, 1 user ticks
hda2 (filesys): 56 reads, 206 writes
hda3 (scratch): 100 reads, 2 writes
Console: 1003 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
perl -I../.. ../../tests/userprog/args-single.ck tests/userprog/args-single tests/userprog/args-single.result
pass tests/userprog/args-single
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/args-multiple -a args-multiple -- -q    -f run 'args-multiple some arguments for you!' < /dev/null 2> tests/userprog/args-multiple.errors |tee tests/userprog/args-multiple.output
Copying tests/userprog/args-multiple to scratch partition...
qemu -hda /tmp/Emv4gLXHhM.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run 'args-multiple some arguments for you!'
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 101 sectors (50 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'args-multiple' into the file system...
Erasing ustar archive...
Executing 'args-multiple some arguments for you!':
(args) begin
(args) argc = 5
(args) argv[0] = 'args-multiple'
(args) argv[1] = 'some'
(args) argv[2] = 'arguments'
(args) argv[3] = 'for'
(args) argv[4] = 'you!'
(args) argv[5] = null
(args) end
args-multiple: exit(0)
Execution of 'args-multiple some arguments for you!' complete.
Timer: 68 ticks
Thread: 0 idle ticks, 68 kernel ticks, 1 user ticks
hda2 (filesys): 56 reads, 206 writes
hda3 (scratch): 100 reads, 2 writes
Console: 1140 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
perl -I../.. ../../tests/userprog/args-multiple.ck tests/userprog/args-multiple tests/userprog/args-multiple.result
pass tests/userprog/args-multiple
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/args-many -a args-many -- -q    -f run 'args-many a b c d e f g h i j k l m n o p q r s t u v' < /dev/null 2> tests/userprog/args-many.errors |tee tests/userprog/args-many.output
Copying tests/userprog/args-many to scratch partition...
qemu -hda /tmp/OEunw0Saok.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run 'args-many a b c d e f g h i j k l m n o p q r s t u v'
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 101 sectors (50 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'args-many' into the file system...
Erasing ustar archive...
Executing 'args-many a b c d e f g h i j k l m n o p q r s t u v':
(args) begin
(args) argc = 23
(args) argv[0] = 'args-many'
(args) argv[1] = 'a'
(args) argv[2] = 'b'
(args) argv[3] = 'c'
(args) argv[4] = 'd'
(args) argv[5] = 'e'
(args) argv[6] = 'f'
(args) argv[7] = 'g'
(args) argv[8] = 'h'
(args) argv[9] = 'i'
(args) argv[10] = 'j'
(args) argv[11] = 'k'
(args) argv[12] = 'l'
(args) argv[13] = 'm'
(args) argv[14] = 'n'
(args) argv[15] = 'o'
(args) argv[16] = 'p'
(args) argv[17] = 'q'
(args) argv[18] = 'r'
(args) argv[19] = 's'
(args) argv[20] = 't'
(args) argv[21] = 'u'
(args) argv[22] = 'v'
(args) argv[23] = null
(args) end
args-many: exit(0)
Execution of 'args-many a b c d e f g h i j k l m n o p q r s t u v' complete.
Timer: 70 ticks
Thread: 0 idle ticks, 65 kernel ticks, 5 user ticks
hda2 (filesys): 56 reads, 206 writes
hda3 (scratch): 100 reads, 2 writes
Console: 1553 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
perl -I../.. ../../tests/userprog/args-many.ck tests/userprog/args-many tests/userprog/args-many.result
pass tests/userprog/args-many
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/args-dbl-space -a args-dbl-space -- -q    -f run 'args-dbl-space two  spaces!' < /dev/null 2> tests/userprog/args-dbl-space.errors |tee tests/userprog/args-dbl-space.output
Copying tests/userprog/args-dbl-space to scratch partition...
qemu -hda /tmp/zS5C8P4wIF.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run 'args-dbl-space two  spaces!'
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 101 sectors (50 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'args-dbl-space' into the file system...
Erasing ustar archive...
Executing 'args-dbl-space two  spaces!':
(args) begin
(args) argc = 3
(args) argv[0] = 'args-dbl-space'
(args) argv[1] = 'two'
(args) argv[2] = 'spaces!'
(args) argv[3] = null
(args) end
args-dbl-space: exit(0)
Execution of 'args-dbl-space two  spaces!' complete.
Timer: 67 ticks
Thread: 0 idle ticks, 66 kernel ticks, 1 user ticks
hda2 (filesys): 56 reads, 206 writes
hda3 (scratch): 100 reads, 2 writes
Console: 1063 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
perl -I../.. ../../tests/userprog/args-dbl-space.ck tests/userprog/args-dbl-space tests/userprog/args-dbl-space.result
pass tests/userprog/args-dbl-space
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/sc-bad-sp -a sc-bad-sp -- -q    -f run sc-bad-sp < /dev/null 2> tests/userprog/sc-bad-sp.errors |tee tests/userprog/sc-bad-sp.output
Copying tests/userprog/sc-bad-sp to scratch partition...
qemu -hda /tmp/Fyodz7TtfZ.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run sc-bad-sp
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 101 sectors (50 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'sc-bad-sp' into the file system...
Erasing ustar archive...
Executing 'sc-bad-sp':
(sc-bad-sp) begin
sc-bad-sp: exit(-1)
Execution of 'sc-bad-sp' complete.
Timer: 67 ticks
Thread: 0 idle ticks, 66 kernel ticks, 1 user ticks
hda2 (filesys): 56 reads, 206 writes
hda3 (scratch): 100 reads, 2 writes
Console: 870 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
perl -I../.. ../../tests/userprog/sc-bad-sp.ck tests/userprog/sc-bad-sp tests/userprog/sc-bad-sp.result
pass tests/userprog/sc-bad-sp
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/sc-bad-arg -a sc-bad-arg -- -q    -f run sc-bad-arg < /dev/null 2> tests/userprog/sc-bad-arg.errors |tee tests/userprog/sc-bad-arg.output
Copying tests/userprog/sc-bad-arg to scratch partition...
qemu -hda /tmp/3qb_T8I2co.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run sc-bad-arg
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 102 sectors (51 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'sc-bad-arg' into the file system...
Erasing ustar archive...
Executing 'sc-bad-arg':
(sc-bad-arg) begin
sc-bad-arg: exit(-1)
Execution of 'sc-bad-arg' complete.
Timer: 67 ticks
Thread: 0 idle ticks, 66 kernel ticks, 1 user ticks
hda2 (filesys): 56 reads, 208 writes
hda3 (scratch): 101 reads, 2 writes
Console: 876 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
perl -I../.. ../../tests/userprog/sc-bad-arg.ck tests/userprog/sc-bad-arg tests/userprog/sc-bad-arg.result
pass tests/userprog/sc-bad-arg
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/sc-boundary -a sc-boundary -- -q    -f run sc-boundary < /dev/null 2> tests/userprog/sc-boundary.errors |tee tests/userprog/sc-boundary.output
Copying tests/userprog/sc-boundary to scratch partition...
qemu -hda /tmp/RYrpQuwXpm.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run sc-boundary
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 105 sectors (52 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'sc-boundary' into the file system...
Erasing ustar archive...
Executing 'sc-boundary':
(sc-boundary) begin
sc-boundary: exit(42)
Execution of 'sc-boundary' complete.
Timer: 66 ticks
Thread: 0 idle ticks, 65 kernel ticks, 1 user ticks
hda2 (filesys): 57 reads, 214 writes
hda3 (scratch): 104 reads, 2 writes
Console: 882 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
perl -I../.. ../../tests/userprog/sc-boundary.ck tests/userprog/sc-boundary tests/userprog/sc-boundary.result
pass tests/userprog/sc-boundary
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/sc-boundary-2 -a sc-boundary-2 -- -q    -f run sc-boundary-2 < /dev/null 2> tests/userprog/sc-boundary-2.errors |tee tests/userprog/sc-boundary-2.output
Copying tests/userprog/sc-boundary-2 to scratch partition...
qemu -hda /tmp/H6_4FIXm3t.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run sc-boundary-2
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 105 sectors (52 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'sc-boundary-2' into the file system...
Erasing ustar archive...
Executing 'sc-boundary-2':
(sc-boundary-2) begin
sc-boundary-2: exit(67)
Execution of 'sc-boundary-2' complete.
Timer: 68 ticks
Thread: 0 idle ticks, 67 kernel ticks, 1 user ticks
hda2 (filesys): 57 reads, 214 writes
hda3 (scratch): 104 reads, 2 writes
Console: 894 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
perl -I../.. ../../tests/userprog/sc-boundary-2.ck tests/userprog/sc-boundary-2 tests/userprog/sc-boundary-2.result
pass tests/userprog/sc-boundary-2
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/halt -a halt -- -q    -f run halt < /dev/null 2> tests/userprog/halt.errors |tee tests/userprog/halt.output
Copying tests/userprog/halt to scratch partition...
qemu -hda /tmp/beG5u7xFRK.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run halt
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 101 sectors (50 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'halt' into the file system...
Erasing ustar archive...
Executing 'halt':
(halt) begin
Timer: 66 ticks
Thread: 0 idle ticks, 65 kernel ticks, 1 user ticks
hda2 (filesys): 56 reads, 206 writes
hda3 (scratch): 100 reads, 2 writes
Console: 795 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
perl -I../.. ../../tests/userprog/halt.ck tests/userprog/halt tests/userprog/halt.result
pass tests/userprog/halt
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/exit -a exit -- -q    -f run exit < /dev/null 2> tests/userprog/exit.errors |tee tests/userprog/exit.output
Copying tests/userprog/exit to scratch partition...
qemu -hda /tmp/biknsCDW6g.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run exit
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 101 sectors (50 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'exit' into the file system...
Erasing ustar archive...
Executing 'exit':
(exit) begin
exit: exit(57)
Execution of 'exit' complete.
Timer: 66 ticks
Thread: 0 idle ticks, 66 kernel ticks, 0 user ticks
hda2 (filesys): 56 reads, 206 writes
hda3 (scratch): 100 reads, 2 writes
Console: 840 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
perl -I../.. ../../tests/userprog/exit.ck tests/userprog/exit tests/userprog/exit.result
pass tests/userprog/exit
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/create-normal -a create-normal -- -q    -f run create-normal < /dev/null 2> tests/userprog/create-normal.errors |tee tests/userprog/create-normal.output
Copying tests/userprog/create-normal to scratch partition...
qemu -hda /tmp/vFHlGSfhFJ.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run create-normal
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 101 sectors (50 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'create-normal' into the file system...
Erasing ustar archive...
Executing 'create-normal':
(create-normal) begin
(create-normal) create quux.dat
(create-normal) end
create-normal: exit(0)
Execution of 'create-normal' complete.
Timer: 67 ticks
Thread: 0 idle ticks, 65 kernel ticks, 2 user ticks
hda2 (filesys): 76 reads, 210 writes
hda3 (scratch): 100 reads, 2 writes
Console: 945 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
perl -I../.. ../../tests/userprog/create-normal.ck tests/userprog/create-normal tests/userprog/create-normal.result
pass tests/userprog/create-normal
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/create-empty -a create-empty -- -q    -f run create-empty < /dev/null 2> tests/userprog/create-empty.errors |tee tests/userprog/create-empty.output
Copying tests/userprog/create-empty to scratch partition...
qemu -hda /tmp/dwS0jFSLxK.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run create-empty
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 101 sectors (50 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'create-empty' into the file system...
Erasing ustar archive...
Executing 'create-empty':
(create-empty) begin
(create-empty) create(""): 0
(create-empty) end
create-empty: exit(0)
Execution of 'create-empty' complete.
Timer: 67 ticks
Thread: 0 idle ticks, 65 kernel ticks, 2 user ticks
hda2 (filesys): 57 reads, 210 writes
hda3 (scratch): 100 reads, 2 writes
Console: 935 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
perl -I../.. ../../tests/userprog/create-empty.ck tests/userprog/create-empty tests/userprog/create-empty.result
pass tests/userprog/create-empty
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/create-null -a create-null -- -q    -f run create-null < /dev/null 2> tests/userprog/create-null.errors |tee tests/userprog/create-null.output
Copying tests/userprog/create-null to scratch partition...
qemu -hda /tmp/K6tVqOdrIm.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run create-null
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  157,081,600 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 101 sectors (50 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'create-null' into the file system...
Erasing ustar archive...
Executing 'create-null':
(create-null) begin
create-null: exit(-1)
Execution of 'create-null' complete.
Timer: 69 ticks
Thread: 0 idle ticks, 68 kernel ticks, 1 user ticks
hda2 (filesys): 56 reads, 206 writes
hda3 (scratch): 100 reads, 2 writes
Console: 882 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
perl -I../.. ../../tests/userprog/create-null.ck tests/userprog/create-null tests/userprog/create-null.result
pass tests/userprog/create-null
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/create-bad-ptr -a create-bad-ptr -- -q    -f run create-bad-ptr < /dev/null 2> tests/userprog/create-bad-ptr.errors |tee tests/userprog/create-bad-ptr.output
Copying tests/userprog/create-bad-ptr to scratch partition...
qemu -hda /tmp/BRVXXtyCeA.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run create-bad-ptr
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 101 sectors (50 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'create-bad-ptr' into the file system...
Erasing ustar archive...
Executing 'create-bad-ptr':
(create-bad-ptr) begin
create-bad-ptr: exit(-1)
Execution of 'create-bad-ptr' complete.
Timer: 67 ticks
Thread: 0 idle ticks, 66 kernel ticks, 1 user ticks
hda2 (filesys): 57 reads, 209 writes
hda3 (scratch): 100 reads, 2 writes
Console: 900 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...
perl -I../.. ../../tests/userprog/create-bad-ptr.ck tests/userprog/create-bad-ptr tests/userprog/create-bad-ptr.result
pass tests/userprog/create-bad-ptr
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/create-long -a create-long -- -q    -f run create-long < /dev/null 2> tests/userprog/create-long.errors |tee tests/userprog/create-long.output
Copying tests/userprog/create-long to scratch partition...
qemu -hda /tmp/cKykdeDVxq.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run create-long
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 102 sectors (51 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'create-long' into the file system...
Erasing ustar archive...
Executing 'create-long':
(create-long) begin
(create-long) create("x..."): 0
(create-long) end
create-long: exit(0)
Execution of 'create-long' complete.
Timer: 72 ticks
Thread: 0 idle ticks, 69 kernel ticks, 3 user ticks
hda2 (filesys): 57 reads, 212 writes
hda3 (scratch): 101 reads, 2 writes
Console: 931 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
perl -I../.. ../../tests/userprog/create-long.ck tests/userprog/create-long tests/userprog/create-long.result
pass tests/userprog/create-long
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/create-exists -a create-exists -- -q    -f run create-exists < /dev/null 2> tests/userprog/create-exists.errors |tee tests/userprog/create-exists.output
Copying tests/userprog/create-exists to scratch partition...
qemu -hda /tmp/pDOkOBpdkB.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run create-exists
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 102 sectors (51 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'create-exists' into the file system...
Erasing ustar archive...
Executing 'create-exists':
(create-exists) begin
(create-exists) create quux.dat
(create-exists) create warble.dat
(create-exists) try to re-create quux.dat
(create-exists) create baffle.dat
(create-exists) try to re-create quux.dat
(create-exists) end
create-exists: exit(0)
Execution of 'create-exists' complete.
Timer: 73 ticks
Thread: 0 idle ticks, 68 kernel ticks, 5 user ticks
hda2 (filesys): 127 reads, 228 writes
hda3 (scratch): 101 reads, 2 writes
Console: 1098 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
perl -I../.. ../../tests/userprog/create-exists.ck tests/userprog/create-exists tests/userprog/create-exists.result
pass tests/userprog/create-exists
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/create-bound -a create-bound -- -q    -f run create-bound < /dev/null 2> tests/userprog/create-bound.errors |tee tests/userprog/create-bound.output
Copying tests/userprog/create-bound to scratch partition...
qemu -hda /tmp/J1NjVT5qhc.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run create-bound
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 104 sectors (52 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'create-bound' into the file system...
Erasing ustar archive...
Executing 'create-bound':
(create-bound) begin
(create-bound) create("quux.dat"): 1
(create-bound) end
create-bound: exit(0)
Execution of 'create-bound' complete.
Timer: 68 ticks
Thread: 0 idle ticks, 66 kernel ticks, 2 user ticks
hda2 (filesys): 77 reads, 216 writes
hda3 (scratch): 103 reads, 2 writes
Console: 943 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
perl -I../.. ../../tests/userprog/create-bound.ck tests/userprog/create-bound tests/userprog/create-bound.result
pass tests/userprog/create-bound
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/open-normal -a open-normal -p ../../tests/userprog/sample.txt -a sample.txt -- -q    -f run open-normal < /dev/null 2> tests/userprog/open-normal.errors |tee tests/userprog/open-normal.output
Copying tests/userprog/open-normal to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
qemu -hda /tmp/7UiLBwSzDg.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run open-normal
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 103 sectors (51 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'open-normal' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'open-normal':
(open-normal) begin
(open-normal) end
open-normal: exit(0)
Execution of 'open-normal' complete.
Timer: 68 ticks
Thread: 0 idle ticks, 67 kernel ticks, 1 user ticks
hda2 (filesys): 85 reads, 212 writes
hda3 (scratch): 102 reads, 2 writes
Console: 944 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
perl -I../.. ../../tests/userprog/open-normal.ck tests/userprog/open-normal tests/userprog/open-normal.result
pass tests/userprog/open-normal
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/open-missing -a open-missing -- -q    -f run open-missing < /dev/null 2> tests/userprog/open-missing.errors |tee tests/userprog/open-missing.output
Copying tests/userprog/open-missing to scratch partition...
qemu -hda /tmp/boREGB_mQH.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run open-missing
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 102 sectors (51 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'open-missing' into the file system...
Erasing ustar archive...
Executing 'open-missing':
(open-missing) begin
(open-missing) end
open-missing: exit(0)
Execution of 'open-missing' complete.
Timer: 68 ticks
Thread: 0 idle ticks, 66 kernel ticks, 2 user ticks
hda2 (filesys): 73 reads, 208 writes
hda3 (scratch): 101 reads, 2 writes
Console: 906 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
perl -I../.. ../../tests/userprog/open-missing.ck tests/userprog/open-missing tests/userprog/open-missing.result
pass tests/userprog/open-missing
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/open-boundary -a open-boundary -p ../../tests/userprog/sample.txt -a sample.txt -- -q    -f run open-boundary < /dev/null 2> tests/userprog/open-boundary.errors |tee tests/userprog/open-boundary.output
Copying tests/userprog/open-boundary to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
qemu -hda /tmp/xUNdhQ5HNb.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run open-boundary
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 106 sectors (53 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'open-boundary' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'open-boundary':
(open-boundary) begin
(open-boundary) open "sample.txt"
(open-boundary) end
open-boundary: exit(0)
Execution of 'open-boundary' complete.
Timer: 73 ticks
Thread: 0 idle ticks, 71 kernel ticks, 2 user ticks
hda2 (filesys): 86 reads, 218 writes
hda3 (scratch): 105 reads, 2 writes
Console: 992 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
perl -I../.. ../../tests/userprog/open-boundary.ck tests/userprog/open-boundary tests/userprog/open-boundary.result
pass tests/userprog/open-boundary
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/open-empty -a open-empty -- -q    -f run open-empty < /dev/null 2> tests/userprog/open-empty.errors |tee tests/userprog/open-empty.output
Copying tests/userprog/open-empty to scratch partition...
qemu -hda /tmp/tZmHKiyCVM.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run open-empty
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 102 sectors (51 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'open-empty' into the file system...
Erasing ustar archive...
Executing 'open-empty':
(open-empty) begin
(open-empty) end
open-empty: exit(0)
Execution of 'open-empty' complete.
Timer: 67 ticks
Thread: 0 idle ticks, 66 kernel ticks, 1 user ticks
hda2 (filesys): 73 reads, 208 writes
hda3 (scratch): 101 reads, 2 writes
Console: 892 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
perl -I../.. ../../tests/userprog/open-empty.ck tests/userprog/open-empty tests/userprog/open-empty.result
pass tests/userprog/open-empty
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/open-null -a open-null -- -q    -f run open-null < /dev/null 2> tests/userprog/open-null.errors |tee tests/userprog/open-null.output
Copying tests/userprog/open-null to scratch partition...
qemu -hda /tmp/Xlzs5JCuHv.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run open-null
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 101 sectors (50 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'open-null' into the file system...
Erasing ustar archive...
Executing 'open-null':
(open-null) begin
open-null: exit(-1)
Execution of 'open-null' complete.
Timer: 67 ticks
Thread: 0 idle ticks, 66 kernel ticks, 1 user ticks
hda2 (filesys): 56 reads, 206 writes
hda3 (scratch): 100 reads, 2 writes
Console: 870 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
perl -I../.. ../../tests/userprog/open-null.ck tests/userprog/open-null tests/userprog/open-null.result
pass tests/userprog/open-null
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/open-bad-ptr -a open-bad-ptr -- -q    -f run open-bad-ptr < /dev/null 2> tests/userprog/open-bad-ptr.errors |tee tests/userprog/open-bad-ptr.output
Copying tests/userprog/open-bad-ptr to scratch partition...
qemu -hda /tmp/xJNAXHBg_B.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run open-bad-ptr
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 101 sectors (50 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'open-bad-ptr' into the file system...
Erasing ustar archive...
Executing 'open-bad-ptr':
(open-bad-ptr) begin
open-bad-ptr: exit(-1)
Execution of 'open-bad-ptr' complete.
Timer: 71 ticks
Thread: 0 idle ticks, 69 kernel ticks, 2 user ticks
hda2 (filesys): 58 reads, 206 writes
hda3 (scratch): 100 reads, 2 writes
Console: 888 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...
perl -I../.. ../../tests/userprog/open-bad-ptr.ck tests/userprog/open-bad-ptr tests/userprog/open-bad-ptr.result
pass tests/userprog/open-bad-ptr
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/open-twice -a open-twice -p ../../tests/userprog/sample.txt -a sample.txt -- -q    -f run open-twice < /dev/null 2> tests/userprog/open-twice.errors |tee tests/userprog/open-twice.output
Copying tests/userprog/open-twice to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
qemu -hda /tmp/fqENrscJXp.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run open-twice
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 104 sectors (52 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'open-twice' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'open-twice':
(open-twice) begin
(open-twice) open "sample.txt" once
(open-twice) open "sample.txt" again
(open-twice) end
open-twice: exit(0)
Execution of 'open-twice' complete.
Timer: 72 ticks
Thread: 0 idle ticks, 71 kernel ticks, 2 user ticks
hda2 (filesys): 95 reads, 214 writes
hda3 (scratch): 103 reads, 2 writes
Console: 1010 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
perl -I../.. ../../tests/userprog/open-twice.ck tests/userprog/open-twice tests/userprog/open-twice.result
pass tests/userprog/open-twice
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/close-normal -a close-normal -p ../../tests/userprog/sample.txt -a sample.txt -- -q    -f run close-normal < /dev/null 2> tests/userprog/close-normal.errors |tee tests/userprog/close-normal.output
Copying tests/userprog/close-normal to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
qemu -hda /tmp/bUtfa1wzYM.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run close-normal
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 104 sectors (52 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'close-normal' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'close-normal':
(close-normal) begin
(close-normal) open "sample.txt"
(close-normal) close "sample.txt"
(close-normal) end
close-normal: exit(0)
Execution of 'close-normal' complete.
Timer: 75 ticks
Thread: 0 idle ticks, 72 kernel ticks, 3 user ticks
hda2 (filesys): 85 reads, 214 writes
hda3 (scratch): 103 reads, 2 writes
Console: 1018 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
perl -I../.. ../../tests/userprog/close-normal.ck tests/userprog/close-normal tests/userprog/close-normal.result
pass tests/userprog/close-normal
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/close-twice -a close-twice -p ../../tests/userprog/sample.txt -a sample.txt -- -q    -f run close-twice < /dev/null 2> tests/userprog/close-twice.errors |tee tests/userprog/close-twice.output
Copying tests/userprog/close-twice to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
qemu -hda /tmp/FMQlbMq7BC.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run close-twice
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 104 sectors (52 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'close-twice' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'close-twice':
(close-twice) begin
(close-twice) open "sample.txt"
(close-twice) close "sample.txt"
(close-twice) close "sample.txt" again
(close-twice) end
close-twice: exit(0)
Execution of 'close-twice' complete.
Timer: 71 ticks
Thread: 0 idle ticks, 70 kernel ticks, 2 user ticks
hda2 (filesys): 86 reads, 214 writes
hda3 (scratch): 103 reads, 2 writes
Console: 1048 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
perl -I../.. ../../tests/userprog/close-twice.ck tests/userprog/close-twice tests/userprog/close-twice.result
pass tests/userprog/close-twice
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/close-stdin -a close-stdin -- -q    -f run close-stdin < /dev/null 2> tests/userprog/close-stdin.errors |tee tests/userprog/close-stdin.output
Copying tests/userprog/close-stdin to scratch partition...
qemu -hda /tmp/EWIS7JtzaU.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run close-stdin
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 101 sectors (50 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'close-stdin' into the file system...
Erasing ustar archive...
Executing 'close-stdin':
(close-stdin) begin
(close-stdin) end
close-stdin: exit(0)
Execution of 'close-stdin' complete.
Timer: 67 ticks
Thread: 0 idle ticks, 66 kernel ticks, 1 user ticks
hda2 (filesys): 56 reads, 206 writes
hda3 (scratch): 100 reads, 2 writes
Console: 899 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
perl -I../.. ../../tests/userprog/close-stdin.ck tests/userprog/close-stdin tests/userprog/close-stdin.result
pass tests/userprog/close-stdin
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/close-stdout -a close-stdout -- -q    -f run close-stdout < /dev/null 2> tests/userprog/close-stdout.errors |tee tests/userprog/close-stdout.output
Copying tests/userprog/close-stdout to scratch partition...
qemu -hda /tmp/cItBH4SHUT.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run close-stdout
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 101 sectors (50 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'close-stdout' into the file system...
Erasing ustar archive...
Executing 'close-stdout':
(close-stdout) begin
(close-stdout) end
close-stdout: exit(0)
Execution of 'close-stdout' complete.
Timer: 68 ticks
Thread: 0 idle ticks, 67 kernel ticks, 1 user ticks
hda2 (filesys): 56 reads, 206 writes
hda3 (scratch): 100 reads, 2 writes
Console: 906 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
perl -I../.. ../../tests/userprog/close-stdout.ck tests/userprog/close-stdout tests/userprog/close-stdout.result
pass tests/userprog/close-stdout
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/close-bad-fd -a close-bad-fd -- -q    -f run close-bad-fd < /dev/null 2> tests/userprog/close-bad-fd.errors |tee tests/userprog/close-bad-fd.output
Copying tests/userprog/close-bad-fd to scratch partition...
qemu -hda /tmp/0F6f5Zqac5.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run close-bad-fd
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 101 sectors (50 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'close-bad-fd' into the file system...
Erasing ustar archive...
Executing 'close-bad-fd':
(close-bad-fd) begin
(close-bad-fd) end
close-bad-fd: exit(0)
Execution of 'close-bad-fd' complete.
Timer: 67 ticks
Thread: 0 idle ticks, 67 kernel ticks, 1 user ticks
hda2 (filesys): 56 reads, 206 writes
hda3 (scratch): 100 reads, 2 writes
Console: 906 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
perl -I../.. ../../tests/userprog/close-bad-fd.ck tests/userprog/close-bad-fd tests/userprog/close-bad-fd.result
pass tests/userprog/close-bad-fd
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/read-normal -a read-normal -p ../../tests/userprog/sample.txt -a sample.txt -- -q    -f run read-normal < /dev/null 2> tests/userprog/read-normal.errors |tee tests/userprog/read-normal.output
Copying tests/userprog/read-normal to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
qemu -hda /tmp/OkFAbY7JsK.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run read-normal
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 104 sectors (52 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'read-normal' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'read-normal':
(read-normal) begin
(read-normal) open "sample.txt" for verification
(read-normal) verified contents of "sample.txt"
(read-normal) close "sample.txt"
(read-normal) end
read-normal: exit(0)
Execution of 'read-normal' complete.
Timer: 70 ticks
Thread: 0 idle ticks, 67 kernel ticks, 3 user ticks
hda2 (filesys): 87 reads, 214 writes
hda3 (scratch): 103 reads, 2 writes
Console: 1074 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
perl -I../.. ../../tests/userprog/read-normal.ck tests/userprog/read-normal tests/userprog/read-normal.result
pass tests/userprog/read-normal
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/read-bad-ptr -a read-bad-ptr -p ../../tests/userprog/sample.txt -a sample.txt -- -q    -f run read-bad-ptr < /dev/null 2> tests/userprog/read-bad-ptr.errors |tee tests/userprog/read-bad-ptr.output
Copying tests/userprog/read-bad-ptr to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
qemu -hda /tmp/zvxjOvyBY3.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run read-bad-ptr
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 104 sectors (52 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'read-bad-ptr' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'read-bad-ptr':
(read-bad-ptr) begin
(read-bad-ptr) open "sample.txt"
read-bad-ptr: exit(-1)
Execution of 'read-bad-ptr' complete.
Timer: 72 ticks
Thread: 0 idle ticks, 72 kernel ticks, 1 user ticks
hda2 (filesys): 86 reads, 214 writes
hda3 (scratch): 103 reads, 2 writes
Console: 966 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
perl -I../.. ../../tests/userprog/read-bad-ptr.ck tests/userprog/read-bad-ptr tests/userprog/read-bad-ptr.result
pass tests/userprog/read-bad-ptr
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/read-boundary -a read-boundary -p ../../tests/userprog/sample.txt -a sample.txt -- -q    -f run read-boundary < /dev/null 2> tests/userprog/read-boundary.errors |tee tests/userprog/read-boundary.output
Copying tests/userprog/read-boundary to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
qemu -hda /tmp/beUaiyQE6v.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run read-boundary
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 108 sectors (54 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'read-boundary' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'read-boundary':
(read-boundary) begin
(read-boundary) open "sample.txt"
(read-boundary) end
read-boundary: exit(0)
Execution of 'read-boundary' complete.
Timer: 70 ticks
Thread: 0 idle ticks, 69 kernel ticks, 2 user ticks
hda2 (filesys): 88 reads, 222 writes
hda3 (scratch): 107 reads, 2 writes
Console: 992 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
perl -I../.. ../../tests/userprog/read-boundary.ck tests/userprog/read-boundary tests/userprog/read-boundary.result
pass tests/userprog/read-boundary
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/read-zero -a read-zero -p ../../tests/userprog/sample.txt -a sample.txt -- -q    -f run read-zero < /dev/null 2> tests/userprog/read-zero.errors |tee tests/userprog/read-zero.output
Copying tests/userprog/read-zero to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
qemu -hda /tmp/Le2sFHPvU0.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run read-zero
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 104 sectors (52 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'read-zero' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'read-zero':
(read-zero) begin
(read-zero) open "sample.txt"
(read-zero) end
read-zero: exit(0)
Execution of 'read-zero' complete.
Timer: 68 ticks
Thread: 0 idle ticks, 67 kernel ticks, 1 user ticks
hda2 (filesys): 86 reads, 214 writes
hda3 (scratch): 103 reads, 2 writes
Console: 960 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
perl -I../.. ../../tests/userprog/read-zero.ck tests/userprog/read-zero tests/userprog/read-zero.result
pass tests/userprog/read-zero
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/read-stdout -a read-stdout -- -q    -f run read-stdout < /dev/null 2> tests/userprog/read-stdout.errors |tee tests/userprog/read-stdout.output
Copying tests/userprog/read-stdout to scratch partition...
qemu -hda /tmp/eCwV2MkyDy.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run read-stdout
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 101 sectors (50 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'read-stdout' into the file system...
Erasing ustar archive...
Executing 'read-stdout':
(read-stdout) begin
(read-stdout) end
read-stdout: exit(0)
Execution of 'read-stdout' complete.
Timer: 68 ticks
Thread: 0 idle ticks, 68 kernel ticks, 1 user ticks
hda2 (filesys): 56 reads, 206 writes
hda3 (scratch): 100 reads, 2 writes
Console: 899 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
perl -I../.. ../../tests/userprog/read-stdout.ck tests/userprog/read-stdout tests/userprog/read-stdout.result
pass tests/userprog/read-stdout
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/read-bad-fd -a read-bad-fd -- -q    -f run read-bad-fd < /dev/null 2> tests/userprog/read-bad-fd.errors |tee tests/userprog/read-bad-fd.output
Copying tests/userprog/read-bad-fd to scratch partition...
qemu -hda /tmp/JWvr2qAJv1.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run read-bad-fd
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 102 sectors (51 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'read-bad-fd' into the file system...
Erasing ustar archive...
Executing 'read-bad-fd':
(read-bad-fd) begin
(read-bad-fd) end
read-bad-fd: exit(0)
Execution of 'read-bad-fd' complete.
Timer: 67 ticks
Thread: 0 idle ticks, 66 kernel ticks, 1 user ticks
hda2 (filesys): 57 reads, 208 writes
hda3 (scratch): 101 reads, 2 writes
Console: 899 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
perl -I../.. ../../tests/userprog/read-bad-fd.ck tests/userprog/read-bad-fd tests/userprog/read-bad-fd.result
pass tests/userprog/read-bad-fd
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/write-normal -a write-normal -p ../../tests/userprog/sample.txt -a sample.txt -- -q    -f run write-normal < /dev/null 2> tests/userprog/write-normal.errors |tee tests/userprog/write-normal.output
Copying tests/userprog/write-normal to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
qemu -hda /tmp/_P0kTsept9.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run write-normal
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 105 sectors (52 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'write-normal' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'write-normal':
(write-normal) begin
(write-normal) create "test.txt"
(write-normal) open "test.txt"
(write-normal) end
write-normal: exit(0)
Execution of 'write-normal' complete.
Timer: 71 ticks
Thread: 0 idle ticks, 70 kernel ticks, 2 user ticks
hda2 (filesys): 109 reads, 222 writes
hda3 (scratch): 104 reads, 2 writes
Console: 1016 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
perl -I../.. ../../tests/userprog/write-normal.ck tests/userprog/write-normal tests/userprog/write-normal.result
pass tests/userprog/write-normal
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/write-bad-ptr -a write-bad-ptr -p ../../tests/userprog/sample.txt -a sample.txt -- -q    -f run write-bad-ptr < /dev/null 2> tests/userprog/write-bad-ptr.errors |tee tests/userprog/write-bad-ptr.output
Copying tests/userprog/write-bad-ptr to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
qemu -hda /tmp/XkTtXy5FKE.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run write-bad-ptr
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 104 sectors (52 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'write-bad-ptr' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'write-bad-ptr':
(write-bad-ptr) begin
(write-bad-ptr) open "sample.txt"
write-bad-ptr: exit(-1)
Execution of 'write-bad-ptr' complete.
Timer: 69 ticks
Thread: 0 idle ticks, 68 kernel ticks, 1 user ticks
hda2 (filesys): 87 reads, 214 writes
hda3 (scratch): 103 reads, 2 writes
Console: 973 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...
perl -I../.. ../../tests/userprog/write-bad-ptr.ck tests/userprog/write-bad-ptr tests/userprog/write-bad-ptr.result
pass tests/userprog/write-bad-ptr
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/write-boundary -a write-boundary -p ../../tests/userprog/sample.txt -a sample.txt -- -q    -f run write-boundary < /dev/null 2> tests/userprog/write-boundary.errors |tee tests/userprog/write-boundary.output
Copying tests/userprog/write-boundary to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
qemu -hda /tmp/BtC1QKUCbp.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run write-boundary
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 108 sectors (54 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'write-boundary' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'write-boundary':
(write-boundary) begin
(write-boundary) open "sample.txt"
(write-boundary) end
write-boundary: exit(0)
Execution of 'write-boundary' complete.
Timer: 69 ticks
Thread: 0 idle ticks, 68 kernel ticks, 1 user ticks
hda2 (filesys): 87 reads, 223 writes
hda3 (scratch): 107 reads, 2 writes
Console: 1000 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
perl -I../.. ../../tests/userprog/write-boundary.ck tests/userprog/write-boundary tests/userprog/write-boundary.result
pass tests/userprog/write-boundary
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/write-zero -a write-zero -p ../../tests/userprog/sample.txt -a sample.txt -- -q    -f run write-zero < /dev/null 2> tests/userprog/write-zero.errors |tee tests/userprog/write-zero.output
Copying tests/userprog/write-zero to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
qemu -hda /tmp/YbNFEdSc8m.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run write-zero
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 104 sectors (52 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'write-zero' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'write-zero':
(write-zero) begin
(write-zero) open "sample.txt"
(write-zero) end
write-zero: exit(0)
Execution of 'write-zero' complete.
Timer: 67 ticks
Thread: 0 idle ticks, 66 kernel ticks, 1 user ticks
hda2 (filesys): 86 reads, 214 writes
hda3 (scratch): 103 reads, 2 writes
Console: 968 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
perl -I../.. ../../tests/userprog/write-zero.ck tests/userprog/write-zero tests/userprog/write-zero.result
pass tests/userprog/write-zero
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/write-stdin -a write-stdin -- -q    -f run write-stdin < /dev/null 2> tests/userprog/write-stdin.errors |tee tests/userprog/write-stdin.output
Copying tests/userprog/write-stdin to scratch partition...
qemu -hda /tmp/3IH9XNLvzV.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run write-stdin
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 101 sectors (50 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'write-stdin' into the file system...
Erasing ustar archive...
Executing 'write-stdin':
(write-stdin) begin
(write-stdin) end
write-stdin: exit(0)
Execution of 'write-stdin' complete.
Timer: 66 ticks
Thread: 0 idle ticks, 65 kernel ticks, 1 user ticks
hda2 (filesys): 56 reads, 206 writes
hda3 (scratch): 100 reads, 2 writes
Console: 899 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
perl -I../.. ../../tests/userprog/write-stdin.ck tests/userprog/write-stdin tests/userprog/write-stdin.result
pass tests/userprog/write-stdin
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/write-bad-fd -a write-bad-fd -- -q    -f run write-bad-fd < /dev/null 2> tests/userprog/write-bad-fd.errors |tee tests/userprog/write-bad-fd.output
Copying tests/userprog/write-bad-fd to scratch partition...
qemu -hda /tmp/CbUDIW9Fqs.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run write-bad-fd
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 102 sectors (51 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'write-bad-fd' into the file system...
Erasing ustar archive...
Executing 'write-bad-fd':
(write-bad-fd) begin
(write-bad-fd) end
write-bad-fd: exit(0)
Execution of 'write-bad-fd' complete.
Timer: 67 ticks
Thread: 0 idle ticks, 67 kernel ticks, 0 user ticks
hda2 (filesys): 57 reads, 208 writes
hda3 (scratch): 101 reads, 2 writes
Console: 906 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
perl -I../.. ../../tests/userprog/write-bad-fd.ck tests/userprog/write-bad-fd tests/userprog/write-bad-fd.result
pass tests/userprog/write-bad-fd
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/exec-once -a exec-once -p tests/userprog/child-simple -a child-simple -- -q    -f run exec-once < /dev/null 2> tests/userprog/exec-once.errors |tee tests/userprog/exec-once.output
Copying tests/userprog/exec-once to scratch partition...
Copying tests/userprog/child-simple to scratch partition...
qemu -hda /tmp/wrk7HzPyQJ.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run exec-once
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 199 sectors (99 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'exec-once' into the file system...
Putting 'child-simple' into the file system...
Erasing ustar archive...
Executing 'exec-once':
(exec-once) begin
(child-simple) run
child-simple: exit(81)
(exec-once) end
exec-once: exit(0)
Execution of 'exec-once' complete.
Timer: 82 ticks
Thread: 0 idle ticks, 80 kernel ticks, 2 user ticks
hda2 (filesys): 112 reads, 404 writes
hda3 (scratch): 198 reads, 2 writes
Console: 975 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
perl -I../.. ../../tests/userprog/exec-once.ck tests/userprog/exec-once tests/userprog/exec-once.result
pass tests/userprog/exec-once
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/exec-arg -a exec-arg -p tests/userprog/child-args -a child-args -- -q    -f run exec-arg < /dev/null 2> tests/userprog/exec-arg.errors |tee tests/userprog/exec-arg.output
Copying tests/userprog/exec-arg to scratch partition...
Copying tests/userprog/child-args to scratch partition...
qemu -hda /tmp/U0cBcruIkZ.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run exec-arg
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 200 sectors (100 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'exec-arg' into the file system...
Putting 'child-args' into the file system...
Erasing ustar archive...
Executing 'exec-arg':
(exec-arg) begin
(args) begin
(args) argc = 2
(args) argv[0] = 'child-args'
(args) argv[1] = 'childarg'
(args) argv[2] = null
(args) end
child-args: exit(0)
(exec-arg) end
exec-arg: exit(0)
Execution of 'exec-arg' complete.
Timer: 81 ticks
Thread: 0 idle ticks, 78 kernel ticks, 3 user ticks
hda2 (filesys): 112 reads, 406 writes
hda3 (scratch): 199 reads, 2 writes
Console: 1065 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
perl -I../.. ../../tests/userprog/exec-arg.ck tests/userprog/exec-arg tests/userprog/exec-arg.result
pass tests/userprog/exec-arg
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/exec-multiple -a exec-multiple -p tests/userprog/child-simple -a child-simple -- -q    -f run exec-multiple < /dev/null 2> tests/userprog/exec-multiple.errors |tee tests/userprog/exec-multiple.output
Copying tests/userprog/exec-multiple to scratch partition...
Copying tests/userprog/child-simple to scratch partition...
qemu -hda /tmp/96Zt_koqMj.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run exec-multiple
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 199 sectors (99 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'exec-multiple' into the file system...
Putting 'child-simple' into the file system...
Erasing ustar archive...
Executing 'exec-multiple':
(exec-multiple) begin
(child-simple) run
child-simple: exit(81)
(child-simple) run
child-simple: exit(81)
(child-simple) run
child-simple: exit(81)
(child-simple) run
child-simple: exit(81)
(exec-multiple) end
exec-multiple: exit(0)
Execution of 'exec-multiple' complete.
Timer: 81 ticks
Thread: 0 idle ticks, 78 kernel ticks, 3 user ticks
hda2 (filesys): 142 reads, 404 writes
hda3 (scratch): 198 reads, 2 writes
Console: 1129 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
perl -I../.. ../../tests/userprog/exec-multiple.ck tests/userprog/exec-multiple tests/userprog/exec-multiple.result
pass tests/userprog/exec-multiple
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/exec-missing -a exec-missing -- -q    -f run exec-missing < /dev/null 2> tests/userprog/exec-missing.errors |tee tests/userprog/exec-missing.output
Copying tests/userprog/exec-missing to scratch partition...
qemu -hda /tmp/VzjWKobBBW.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run exec-missing
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 101 sectors (50 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'exec-missing' into the file system...
Erasing ustar archive...
Executing 'exec-missing':
(exec-missing) begin
load: no-such-file: open failed
(exec-missing) exec("no-such-file"): -1
(exec-missing) end
exec-missing: exit(0)
Execution of 'exec-missing' complete.
Timer: 67 ticks
Thread: 0 idle ticks, 65 kernel ticks, 2 user ticks
hda2 (filesys): 73 reads, 206 writes
hda3 (scratch): 100 reads, 2 writes
Console: 978 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
perl -I../.. ../../tests/userprog/exec-missing.ck tests/userprog/exec-missing tests/userprog/exec-missing.result
pass tests/userprog/exec-missing
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/exec-bad-ptr -a exec-bad-ptr -- -q    -f run exec-bad-ptr < /dev/null 2> tests/userprog/exec-bad-ptr.errors |tee tests/userprog/exec-bad-ptr.output
Copying tests/userprog/exec-bad-ptr to scratch partition...
qemu -hda /tmp/TOXMlV00qq.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run exec-bad-ptr
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 101 sectors (50 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'exec-bad-ptr' into the file system...
Erasing ustar archive...
Executing 'exec-bad-ptr':
(exec-bad-ptr) begin
exec-bad-ptr: exit(-1)
Execution of 'exec-bad-ptr' complete.
Timer: 67 ticks
Thread: 0 idle ticks, 66 kernel ticks, 1 user ticks
hda2 (filesys): 56 reads, 206 writes
hda3 (scratch): 100 reads, 2 writes
Console: 888 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...
perl -I../.. ../../tests/userprog/exec-bad-ptr.ck tests/userprog/exec-bad-ptr tests/userprog/exec-bad-ptr.result
pass tests/userprog/exec-bad-ptr
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/wait-simple -a wait-simple -p tests/userprog/child-simple -a child-simple -- -q    -f run wait-simple < /dev/null 2> tests/userprog/wait-simple.errors |tee tests/userprog/wait-simple.output
Copying tests/userprog/wait-simple to scratch partition...
Copying tests/userprog/child-simple to scratch partition...
qemu -hda /tmp/nd2_61dRod.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run wait-simple
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 199 sectors (99 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'wait-simple' into the file system...
Putting 'child-simple' into the file system...
Erasing ustar archive...
Executing 'wait-simple':
(wait-simple) begin
(child-simple) run
child-simple: exit(81)
(wait-simple) wait(exec()) = 81
(wait-simple) end
wait-simple: exit(0)
Execution of 'wait-simple' complete.
Timer: 80 ticks
Thread: 0 idle ticks, 79 kernel ticks, 1 user ticks
hda2 (filesys): 112 reads, 404 writes
hda3 (scratch): 198 reads, 2 writes
Console: 1021 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
perl -I../.. ../../tests/userprog/wait-simple.ck tests/userprog/wait-simple tests/userprog/wait-simple.result
pass tests/userprog/wait-simple
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/wait-twice -a wait-twice -p tests/userprog/child-simple -a child-simple -- -q    -f run wait-twice < /dev/null 2> tests/userprog/wait-twice.errors |tee tests/userprog/wait-twice.output
Copying tests/userprog/wait-twice to scratch partition...
Copying tests/userprog/child-simple to scratch partition...
qemu -hda /tmp/PcZU7ZZ5AX.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run wait-twice
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 200 sectors (100 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'wait-twice' into the file system...
Putting 'child-simple' into the file system...
Erasing ustar archive...
Executing 'wait-twice':
(wait-twice) begin
(child-simple) run
child-simple: exit(81)
(wait-twice) wait(exec()) = 81
(wait-twice) wait(exec()) = -1
(wait-twice) end
wait-twice: exit(0)
Execution of 'wait-twice' complete.
Timer: 79 ticks
Thread: 0 idle ticks, 77 kernel ticks, 2 user ticks
hda2 (filesys): 112 reads, 406 writes
hda3 (scratch): 199 reads, 2 writes
Console: 1045 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
perl -I../.. ../../tests/userprog/wait-twice.ck tests/userprog/wait-twice tests/userprog/wait-twice.result
pass tests/userprog/wait-twice
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/wait-killed -a wait-killed -p tests/userprog/child-bad -a child-bad -- -q    -f run wait-killed < /dev/null 2> tests/userprog/wait-killed.errors |tee tests/userprog/wait-killed.output
Copying tests/userprog/wait-killed to scratch partition...
Copying tests/userprog/child-bad to scratch partition...
qemu -hda /tmp/9NP_qPUGz5.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run wait-killed
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 200 sectors (100 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'wait-killed' into the file system...
Putting 'child-bad' into the file system...
Erasing ustar archive...
Executing 'wait-killed':
(wait-killed) begin
(child-bad) begin
child-bad: exit(-1)
(wait-killed) wait(exec()) = -1
(wait-killed) end
wait-killed: exit(0)
Execution of 'wait-killed' complete.
Timer: 80 ticks
Thread: 0 idle ticks, 78 kernel ticks, 2 user ticks
hda2 (filesys): 112 reads, 406 writes
hda3 (scratch): 199 reads, 2 writes
Console: 1015 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...
perl -I../.. ../../tests/userprog/wait-killed.ck tests/userprog/wait-killed tests/userprog/wait-killed.result
pass tests/userprog/wait-killed
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/wait-bad-pid -a wait-bad-pid -- -q    -f run wait-bad-pid < /dev/null 2> tests/userprog/wait-bad-pid.errors |tee tests/userprog/wait-bad-pid.output
Copying tests/userprog/wait-bad-pid to scratch partition...
qemu -hda /tmp/DlNTakzznC.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run wait-bad-pid
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 101 sectors (50 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'wait-bad-pid' into the file system...
Erasing ustar archive...
Executing 'wait-bad-pid':
(wait-bad-pid) begin
(wait-bad-pid) end
wait-bad-pid: exit(0)
Execution of 'wait-bad-pid' complete.
Timer: 67 ticks
Thread: 0 idle ticks, 67 kernel ticks, 1 user ticks
hda2 (filesys): 56 reads, 206 writes
hda3 (scratch): 100 reads, 2 writes
Console: 906 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
perl -I../.. ../../tests/userprog/wait-bad-pid.ck tests/userprog/wait-bad-pid tests/userprog/wait-bad-pid.result
pass tests/userprog/wait-bad-pid
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/multi-recurse -a multi-recurse -- -q    -f run 'multi-recurse 15' < /dev/null 2> tests/userprog/multi-recurse.errors |tee tests/userprog/multi-recurse.output
Copying tests/userprog/multi-recurse to scratch partition...
qemu -hda /tmp/3lPJbg_jaW.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run 'multi-recurse 15'
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 113 sectors (56 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'multi-recurse' into the file system...
Erasing ustar archive...
Executing 'multi-recurse 15':
(multi-recurse) begin 15
(multi-recurse) exec("multi-recurse 14")
(multi-recurse) begin 14
(multi-recurse) exec("multi-recurse 13")
(multi-recurse) begin 13
(multi-recurse) exec("multi-recurse 12")
(multi-recurse) begin 12
(multi-recurse) exec("multi-recurse 11")
(multi-recurse) begin 11
(multi-recurse) exec("multi-recurse 10")
(multi-recurse) begin 10
(multi-recurse) exec("multi-recurse 9")
(multi-recurse) begin 9
(multi-recurse) exec("multi-recurse 8")
(multi-recurse) begin 8
(multi-recurse) exec("multi-recurse 7")
(multi-recurse) begin 7
(multi-recurse) exec("multi-recurse 6")
(multi-recurse) begin 6
(multi-recurse) exec("multi-recurse 5")
(multi-recurse) begin 5
(multi-recurse) exec("multi-recurse 4")
(multi-recurse) begin 4
(multi-recurse) exec("multi-recurse 3")
(multi-recurse) begin 3
(multi-recurse) exec("multi-recurse 2")
(multi-recurse) begin 2
(multi-recurse) exec("multi-recurse 1")
(multi-recurse) begin 1
(multi-recurse) exec("multi-recurse 0")
(multi-recurse) begin 0
(multi-recurse) end 0
multi-recurse: exit(0)
(multi-recurse) end 1
multi-recurse: exit(1)
(multi-recurse) end 2
multi-recurse: exit(2)
(multi-recurse) end 3
multi-recurse: exit(3)
(multi-recurse) end 4
multi-recurse: exit(4)
(multi-recurse) end 5
multi-recurse: exit(5)
(multi-recurse) end 6
multi-recurse: exit(6)
(multi-recurse) end 7
multi-recurse: exit(7)
(multi-recurse) end 8
multi-recurse: exit(8)
(multi-recurse) end 9
multi-recurse: exit(9)
(multi-recurse) end 10
multi-recurse: exit(10)
(multi-recurse) end 11
multi-recurse: exit(11)
(multi-recurse) end 12
multi-recurse: exit(12)
(multi-recurse) end 13
multi-recurse: exit(13)
(multi-recurse) end 14
multi-recurse: exit(14)
(multi-recurse) end 15
multi-recurse: exit(15)
Execution of 'multi-recurse 15' complete.
Timer: 78 ticks
Thread: 0 idle ticks, 67 kernel ticks, 11 user ticks
hda2 (filesys): 179 reads, 230 writes
hda3 (scratch): 112 reads, 2 writes
Console: 2588 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
perl -I../.. ../../tests/userprog/multi-recurse.ck tests/userprog/multi-recurse tests/userprog/multi-recurse.result
pass tests/userprog/multi-recurse
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/multi-child-fd -a multi-child-fd -p ../../tests/userprog/sample.txt -a sample.txt -p tests/userprog/child-close -a child-close -- -q    -f run multi-child-fd < /dev/null 2> tests/userprog/multi-child-fd.errors |tee tests/userprog/multi-child-fd.output
Copying tests/userprog/multi-child-fd to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
Copying tests/userprog/child-close to scratch partition...
qemu -hda /tmp/kQrbLAXKO7.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run multi-child-fd
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 215 sectors (107 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'multi-child-fd' into the file system...
Putting 'sample.txt' into the file system...
Putting 'child-close' into the file system...
Erasing ustar archive...
Executing 'multi-child-fd':
(multi-child-fd) begin
(multi-child-fd) open "sample.txt"
(child-close) begin
(child-close) end
child-close: exit(0)
(multi-child-fd) wait(exec()) = 0
(multi-child-fd) verified contents of "sample.txt"
(multi-child-fd) end
multi-child-fd: exit(0)
Execution of 'multi-child-fd' complete.
Timer: 85 ticks
Thread: 0 idle ticks, 81 kernel ticks, 4 user ticks
hda2 (filesys): 149 reads, 438 writes
hda3 (scratch): 214 reads, 2 writes
Console: 1192 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
perl -I../.. ../../tests/userprog/multi-child-fd.ck tests/userprog/multi-child-fd tests/userprog/multi-child-fd.result
pass tests/userprog/multi-child-fd
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/rox-simple -a rox-simple -- -q    -f run rox-simple < /dev/null 2> tests/userprog/rox-simple.errors |tee tests/userprog/rox-simple.output
Copying tests/userprog/rox-simple to scratch partition...
qemu -hda /tmp/zv3z1uq6EP.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run rox-simple
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 102 sectors (51 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'rox-simple' into the file system...
Erasing ustar archive...
Executing 'rox-simple':
(rox-simple) begin
(rox-simple) open "rox-simple"
(rox-simple) read "rox-simple"
(rox-simple) try to write "rox-simple"
(rox-simple) end
rox-simple: exit(0)
Execution of 'rox-simple' complete.
Timer: 68 ticks
Thread: 0 idle ticks, 66 kernel ticks, 2 user ticks
hda2 (filesys): 60 reads, 208 writes
hda3 (scratch): 101 reads, 2 writes
Console: 993 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
perl -I../.. ../../tests/userprog/rox-simple.ck tests/userprog/rox-simple tests/userprog/rox-simple.result
pass tests/userprog/rox-simple
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/rox-child -a rox-child -p tests/userprog/child-rox -a child-rox -- -q    -f run rox-child < /dev/null 2> tests/userprog/rox-child.errors |tee tests/userprog/rox-child.output
Copying tests/userprog/rox-child to scratch partition...
Copying tests/userprog/child-rox to scratch partition...
qemu -hda /tmp/AgrpkfBfaL.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run rox-child
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 215 sectors (107 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'rox-child' into the file system...
Putting 'child-rox' into the file system...
Erasing ustar archive...
Executing 'rox-child':
(rox-child) begin
(rox-child) open "child-rox"
(rox-child) read "child-rox"
(rox-child) write "child-rox"
(rox-child) exec "child-rox 1"
(child-rox) begin
(child-rox) try to write "child-rox"
(child-rox) try to write "child-rox"
(child-rox) end
child-rox: exit(12)
(rox-child) write "child-rox"
(rox-child) end
rox-child: exit(0)
Execution of 'rox-child' complete.
Timer: 81 ticks
Thread: 0 idle ticks, 79 kernel ticks, 2 user ticks
hda2 (filesys): 128 reads, 438 writes
hda3 (scratch): 214 reads, 2 writes
Console: 1208 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
perl -I../.. ../../tests/userprog/rox-child.ck tests/userprog/rox-child tests/userprog/rox-child.result
pass tests/userprog/rox-child
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/rox-multichild -a rox-multichild -p tests/userprog/child-rox -a child-rox -- -q    -f run rox-multichild < /dev/null 2> tests/userprog/rox-multichild.errors |tee tests/userprog/rox-multichild.output
Copying tests/userprog/rox-multichild to scratch partition...
Copying tests/userprog/child-rox to scratch partition...
qemu -hda /tmp/_nUdFjOU7h.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run rox-multichild
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 215 sectors (107 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'rox-multichild' into the file system...
Putting 'child-rox' into the file system...
Erasing ustar archive...
Executing 'rox-multichild':
(rox-multichild) begin
(rox-multichild) open "child-rox"
(rox-multichild) read "child-rox"
(rox-multichild) write "child-rox"
(rox-multichild) exec "child-rox 5"
(child-rox) begin
(child-rox) try to write "child-rox"
(child-rox) exec "child-rox 4"
(child-rox) begin
(child-rox) try to write "child-rox"
(child-rox) exec "child-rox 3"
(child-rox) begin
(child-rox) try to write "child-rox"
(child-rox) exec "child-rox 2"
(child-rox) begin
(child-rox) try to write "child-rox"
(child-rox) exec "child-rox 1"
(child-rox) begin
(child-rox) try to write "child-rox"
(child-rox) try to write "child-rox"
(child-rox) end
child-rox: exit(12)
(child-rox) try to write "child-rox"
(child-rox) end
child-rox: exit(12)
(child-rox) try to write "child-rox"
(child-rox) end
child-rox: exit(12)
(child-rox) try to write "child-rox"
(child-rox) end
child-rox: exit(12)
(child-rox) try to write "child-rox"
(child-rox) end
child-rox: exit(12)
(rox-multichild) write "child-rox"
(rox-multichild) end
rox-multichild: exit(0)
Execution of 'rox-multichild' complete.
Timer: 92 ticks
Thread: 0 idle ticks, 81 kernel ticks, 11 user ticks
hda2 (filesys): 188 reads, 438 writes
hda3 (scratch): 214 reads, 2 writes
Console: 1905 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
perl -I../.. ../../tests/userprog/rox-multichild.ck tests/userprog/rox-multichild tests/userprog/rox-multichild.result
pass tests/userprog/rox-multichild
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/bad-read -a bad-read -- -q    -f run bad-read < /dev/null 2> tests/userprog/bad-read.errors |tee tests/userprog/bad-read.output
Copying tests/userprog/bad-read to scratch partition...
qemu -hda /tmp/aHG5iZSk1C.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run bad-read
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 101 sectors (50 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'bad-read' into the file system...
Erasing ustar archive...
Executing 'bad-read':
(bad-read) begin
bad-read: exit(-1)
Execution of 'bad-read' complete.
Timer: 66 ticks
Thread: 0 idle ticks, 65 kernel ticks, 1 user ticks
hda2 (filesys): 57 reads, 206 writes
hda3 (scratch): 100 reads, 2 writes
Console: 864 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...
perl -I../.. ../../tests/userprog/bad-read.ck tests/userprog/bad-read tests/userprog/bad-read.result
pass tests/userprog/bad-read
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/bad-write -a bad-write -- -q    -f run bad-write < /dev/null 2> tests/userprog/bad-write.errors |tee tests/userprog/bad-write.output
Copying tests/userprog/bad-write to scratch partition...
qemu -hda /tmp/qhMEYiwxD0.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run bad-write
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 101 sectors (50 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'bad-write' into the file system...
Erasing ustar archive...
Executing 'bad-write':
(bad-write) begin
bad-write: exit(-1)
Execution of 'bad-write' complete.
Timer: 67 ticks
Thread: 0 idle ticks, 66 kernel ticks, 1 user ticks
hda2 (filesys): 56 reads, 206 writes
hda3 (scratch): 100 reads, 2 writes
Console: 870 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...
perl -I../.. ../../tests/userprog/bad-write.ck tests/userprog/bad-write tests/userprog/bad-write.result
pass tests/userprog/bad-write
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/bad-read2 -a bad-read2 -- -q    -f run bad-read2 < /dev/null 2> tests/userprog/bad-read2.errors |tee tests/userprog/bad-read2.output
Copying tests/userprog/bad-read2 to scratch partition...
qemu -hda /tmp/MwpRO1_1B1.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run bad-read2
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 101 sectors (50 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'bad-read2' into the file system...
Erasing ustar archive...
Executing 'bad-read2':
(bad-read2) begin
bad-read2: exit(-1)
Execution of 'bad-read2' complete.
Timer: 67 ticks
Thread: 0 idle ticks, 66 kernel ticks, 1 user ticks
hda2 (filesys): 57 reads, 206 writes
hda3 (scratch): 100 reads, 2 writes
Console: 870 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...
perl -I../.. ../../tests/userprog/bad-read2.ck tests/userprog/bad-read2 tests/userprog/bad-read2.result
pass tests/userprog/bad-read2
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/bad-write2 -a bad-write2 -- -q    -f run bad-write2 < /dev/null 2> tests/userprog/bad-write2.errors |tee tests/userprog/bad-write2.output
Copying tests/userprog/bad-write2 to scratch partition...
qemu -hda /tmp/VPGAzoevb2.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run bad-write2
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 101 sectors (50 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'bad-write2' into the file system...
Erasing ustar archive...
Executing 'bad-write2':
(bad-write2) begin
bad-write2: exit(-1)
Execution of 'bad-write2' complete.
Timer: 67 ticks
Thread: 0 idle ticks, 66 kernel ticks, 1 user ticks
hda2 (filesys): 56 reads, 206 writes
hda3 (scratch): 100 reads, 2 writes
Console: 876 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...
perl -I../.. ../../tests/userprog/bad-write2.ck tests/userprog/bad-write2 tests/userprog/bad-write2.result
pass tests/userprog/bad-write2
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/bad-jump -a bad-jump -- -q    -f run bad-jump < /dev/null 2> tests/userprog/bad-jump.errors |tee tests/userprog/bad-jump.output
Copying tests/userprog/bad-jump to scratch partition...
qemu -hda /tmp/qs_0wDe_Hl.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run bad-jump
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 101 sectors (50 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'bad-jump' into the file system...
Erasing ustar archive...
Executing 'bad-jump':
(bad-jump) begin
bad-jump: exit(-1)
Execution of 'bad-jump' complete.
Timer: 66 ticks
Thread: 0 idle ticks, 65 kernel ticks, 1 user ticks
hda2 (filesys): 57 reads, 206 writes
hda3 (scratch): 100 reads, 2 writes
Console: 864 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...
perl -I../.. ../../tests/userprog/bad-jump.ck tests/userprog/bad-jump tests/userprog/bad-jump.result
pass tests/userprog/bad-jump
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/bad-jump2 -a bad-jump2 -- -q    -f run bad-jump2 < /dev/null 2> tests/userprog/bad-jump2.errors |tee tests/userprog/bad-jump2.output
Copying tests/userprog/bad-jump2 to scratch partition...
qemu -hda /tmp/C7e37rm11y.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run bad-jump2
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 101 sectors (50 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'bad-jump2' into the file system...
Erasing ustar archive...
Executing 'bad-jump2':
(bad-jump2) begin
bad-jump2: exit(-1)
Execution of 'bad-jump2' complete.
Timer: 65 ticks
Thread: 0 idle ticks, 66 kernel ticks, 0 user ticks
hda2 (filesys): 57 reads, 206 writes
hda3 (scratch): 100 reads, 2 writes
Console: 870 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...
perl -I../.. ../../tests/userprog/bad-jump2.ck tests/userprog/bad-jump2 tests/userprog/bad-jump2.result
pass tests/userprog/bad-jump2
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/filesys/base/lg-create -a lg-create -- -q    -f run lg-create < /dev/null 2> tests/filesys/base/lg-create.errors |tee tests/filesys/base/lg-create.output
Copying tests/filesys/base/lg-create to scratch partition...
qemu -hda /tmp/QIVmKfkqf8.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run lg-create
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 105 sectors (52 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'lg-create' into the file system...
Erasing ustar archive...
Executing 'lg-create':
(lg-create) begin
(lg-create) create "blargle"
(lg-create) open "blargle" for verification
(lg-create) 1 bytes read starting at offset 21032 in "blargle" differ from expected.
(lg-create) Data actually read:
00005220                          01                      |        .       |
(lg-create) Expected data:
00005220                          00                      |        .       |
(lg-create) 1 bytes read starting at offset 21032 in "blargle" differ from expected: FAILED
lg-create: exit(1)
Execution of 'lg-create' complete.
Timer: 78 ticks
Thread: 0 idle ticks, 66 kernel ticks, 12 user ticks
 (kernel): 1 reads, 0 writes
 (kernel): 0 reads, 0 writes
Console: 1318 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
perl -I../.. ../../tests/filesys/base/lg-create.ck tests/filesys/base/lg-create tests/filesys/base/lg-create.result
FAIL tests/filesys/base/lg-create
run: 1 bytes read starting at offset 21032 in "blargle" differ from expected: FAILED
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/filesys/base/lg-full -a lg-full -- -q    -f run lg-full < /dev/null 2> tests/filesys/base/lg-full.errors |tee tests/filesys/base/lg-full.output
Copying tests/filesys/base/lg-full to scratch partition...
qemu -hda /tmp/qz6x9NjHkQ.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run lg-full
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 105 sectors (52 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'lg-full' into the file system...
Erasing ustar archive...
Executing 'lg-full':
(lg-full) begin
(lg-full) create "quux"
(lg-full) open "quux"
(lg-full) writing "quux"
(lg-full) close "quux"
(lg-full) open "quux" for verification
(lg-full) 1 bytes read starting at offset 21032 in "quux" differ from expected.
(lg-full) Data actually read:
00005220                          4d                      |        M       |
(lg-full) Expected data:
00005220                          4c                      |        L       |
(lg-full) 1 bytes read starting at offset 21032 in "quux" differ from expected: FAILED
lg-full: exit(1)
Execution of 'lg-full' complete.
Timer: 89 ticks
Thread: 0 idle ticks, 67 kernel ticks, 22 user ticks
Kernel PANIC at ../../devices/block.c:47 in block_type_name(): assertion `type < BLOCK_CNT' failed.
Call stack: 0xc00285ac 0xc00246e7 0xc0024970 0xc0026065 0xc00260d5 0xc0020955.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Kernel PANIC recursion at ../../threads/palloc.c:140 in palloc_free_multiple().
perl -I../.. ../../tests/filesys/base/lg-full.ck tests/filesys/base/lg-full tests/filesys/base/lg-full.result
FAIL tests/filesys/base/lg-full
Kernel panic in run: PANIC at ../../devices/block.c:47 in block_type_name(): assertion `type < BLOCK_CNT' failed.
Call stack: 0xc00285ac 0xc00246e7 0xc0024970 0xc0026065 0xc00260d5 0xc0020955
Translation of call stack:
0xc00285ac: debug_panic (.../../lib/kernel/debug.c:38)
0xc00246e7: block_type_name (.../../../devices/block.c:47)
0xc0024970: block_print_stats (...../../devices/block.c:174)
0xc0026065: print_stats (...../devices/shutdown.c:126)
0xc00260d5: shutdown (.../../devices/shutdown.c:38)
0xc0020955: main (.../../../threads/init.c:138)
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/filesys/base/lg-random -a lg-random -- -q    -f run lg-random < /dev/null 2> tests/filesys/base/lg-random.errors |tee tests/filesys/base/lg-random.output
Copying tests/filesys/base/lg-random to scratch partition...
qemu -hda /tmp/MyXuXMfc3k.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run lg-random
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,715,200 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 107 sectors (53 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'lg-random' into the file system...
Erasing ustar archive...
Executing 'lg-random':
(lg-random) begin
(lg-random) create "bazzle"
(lg-random) open "bazzle"
(lg-random) write "bazzle" in random order
(lg-random) read "bazzle" in random order
(lg-random) 1 bytes read starting at offset 28200 in "bazzle" differ from expected.
(lg-random) Data actually read:
00006e20                          54                      |        T       |
(lg-random) Expected data:
00006e20                          53                      |        S       |
(lg-random) 1 bytes read starting at offset 28200 in "bazzle" differ from expected: FAILED
lg-random: exit(1)
Execution of 'lg-random' complete.
Timer: 130 ticks
Thread: 0 idle ticks, 94 kernel ticks, 36 user ticks
Kernel PANIC at ../../devices/block.c:47 in block_type_name(): assertion `type < BLOCK_CNT' failed.
Call stack: 0xc00285ac 0xc00246e7 0xc0024970 0xc0026065 0xc00260d5 0xc0020955.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Kernel PANIC recursion at ../../threads/palloc.c:140 in palloc_free_multiple().
perl -I../.. ../../tests/filesys/base/lg-random.ck tests/filesys/base/lg-random tests/filesys/base/lg-random.result
FAIL tests/filesys/base/lg-random
Kernel panic in run: PANIC at ../../devices/block.c:47 in block_type_name(): assertion `type < BLOCK_CNT' failed.
Call stack: 0xc00285ac 0xc00246e7 0xc0024970 0xc0026065 0xc00260d5 0xc0020955
Translation of call stack:
0xc00285ac: debug_panic (.../../lib/kernel/debug.c:38)
0xc00246e7: block_type_name (.../../../devices/block.c:47)
0xc0024970: block_print_stats (...../../devices/block.c:174)
0xc0026065: print_stats (...../devices/shutdown.c:126)
0xc00260d5: shutdown (.../../devices/shutdown.c:38)
0xc0020955: main (.../../../threads/init.c:138)
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/filesys/base/lg-seq-block -a lg-seq-block -- -q    -f run lg-seq-block < /dev/null 2> tests/filesys/base/lg-seq-block.errors |tee tests/filesys/base/lg-seq-block.output
Copying tests/filesys/base/lg-seq-block to scratch partition...
qemu -hda /tmp/pXmmMwrd8b.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run lg-seq-block
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 105 sectors (52 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'lg-seq-block' into the file system...
Erasing ustar archive...
Executing 'lg-seq-block':
(lg-seq-block) begin
(lg-seq-block) create "noodle"
(lg-seq-block) open "noodle"
(lg-seq-block) writing "noodle"
(lg-seq-block) close "noodle"
(lg-seq-block) open "noodle" for verification
(lg-seq-block) 1 bytes read starting at offset 21032 in "noodle" differ from expected.
(lg-seq-block) Data actually read:
00005220                          4d                      |        M       |
(lg-seq-block) Expected data:
00005220                          4c                      |        L       |
(lg-seq-block) 1 bytes read starting at offset 21032 in "noodle" differ from expected: FAILED
lg-seq-block: exit(1)
Execution of 'lg-seq-block' complete.
Timer: 100 ticks
Thread: 0 idle ticks, 66 kernel ticks, 34 user ticks
Kernel PANIC at ../../devices/block.c:47 in block_type_name(): assertion `type < BLOCK_CNT' failed.
Call stack: 0xc00285ac 0xc00246e7 0xc0024970 0xc0026065 0xc00260d5 0xc0020955.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Kernel PANIC recursion at ../../threads/palloc.c:140 in palloc_free_multiple().
perl -I../.. ../../tests/filesys/base/lg-seq-block.ck tests/filesys/base/lg-seq-block tests/filesys/base/lg-seq-block.result
FAIL tests/filesys/base/lg-seq-block
Kernel panic in run: PANIC at ../../devices/block.c:47 in block_type_name(): assertion `type < BLOCK_CNT' failed.
Call stack: 0xc00285ac 0xc00246e7 0xc0024970 0xc0026065 0xc00260d5 0xc0020955
Translation of call stack:
0xc00285ac: debug_panic (.../../lib/kernel/debug.c:38)
0xc00246e7: block_type_name (.../../../devices/block.c:47)
0xc0024970: block_print_stats (...../../devices/block.c:174)
0xc0026065: print_stats (...../devices/shutdown.c:126)
0xc00260d5: shutdown (.../../devices/shutdown.c:38)
0xc0020955: main (.../../../threads/init.c:138)
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/filesys/base/lg-seq-random -a lg-seq-random -- -q    -f run lg-seq-random < /dev/null 2> tests/filesys/base/lg-seq-random.errors |tee tests/filesys/base/lg-seq-random.output
Copying tests/filesys/base/lg-seq-random to scratch partition...
qemu -hda /tmp/UE17LPGe5W.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run lg-seq-random
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 105 sectors (52 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'lg-seq-random' into the file system...
Erasing ustar archive...
Executing 'lg-seq-random':
(lg-seq-random) begin
(lg-seq-random) create "nibble"
(lg-seq-random) open "nibble"
(lg-seq-random) writing "nibble"
(lg-seq-random) close "nibble"
(lg-seq-random) open "nibble" for verification
(lg-seq-random) 1 bytes read starting at offset 21032 in "nibble" differ from expected.
(lg-seq-random) Data actually read:
00005220                          f3                      |        .       |
(lg-seq-random) Expected data:
00005220                          f2                      |        .       |
(lg-seq-random) 1 bytes read starting at offset 21032 in "nibble" differ from expected: FAILED
lg-seq-random: exit(1)
Execution of 'lg-seq-random' complete.
Timer: 101 ticks
Thread: 0 idle ticks, 67 kernel ticks, 34 user ticks
Kernel PANIC at ../../devices/block.c:47 in block_type_name(): assertion `type < BLOCK_CNT' failed.
Call stack: 0xc00285ac 0xc00246e7 0xc0024970 0xc0026065 0xc00260d5 0xc0020955.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Kernel PANIC recursion at ../../threads/palloc.c:140 in palloc_free_multiple().
perl -I../.. ../../tests/filesys/base/lg-seq-random.ck tests/filesys/base/lg-seq-random tests/filesys/base/lg-seq-random.result
FAIL tests/filesys/base/lg-seq-random
Kernel panic in run: PANIC at ../../devices/block.c:47 in block_type_name(): assertion `type < BLOCK_CNT' failed.
Call stack: 0xc00285ac 0xc00246e7 0xc0024970 0xc0026065 0xc00260d5 0xc0020955
Translation of call stack:
0xc00285ac: debug_panic (.../../lib/kernel/debug.c:38)
0xc00246e7: block_type_name (.../../../devices/block.c:47)
0xc0024970: block_print_stats (...../../devices/block.c:174)
0xc0026065: print_stats (...../devices/shutdown.c:126)
0xc00260d5: shutdown (.../../devices/shutdown.c:38)
0xc0020955: main (.../../../threads/init.c:138)
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/filesys/base/sm-create -a sm-create -- -q    -f run sm-create < /dev/null 2> tests/filesys/base/sm-create.errors |tee tests/filesys/base/sm-create.output
Copying tests/filesys/base/sm-create to scratch partition...
qemu -hda /tmp/zOLTtbZk9N.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run sm-create
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 105 sectors (52 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'sm-create' into the file system...
Erasing ustar archive...
Executing 'sm-create':
(sm-create) begin
(sm-create) create "blargle"
(sm-create) open "blargle" for verification
(sm-create) verified contents of "blargle"
(sm-create) close "blargle"
(sm-create) end
sm-create: exit(0)
Execution of 'sm-create' complete.
Timer: 79 ticks
Thread: 0 idle ticks, 74 kernel ticks, 5 user ticks
hda2 (filesys): 93 reads, 230 writes
hda3 (scratch): 104 reads, 2 writes
Console: 1029 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
perl -I../.. ../../tests/filesys/base/sm-create.ck tests/filesys/base/sm-create tests/filesys/base/sm-create.result
pass tests/filesys/base/sm-create
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/filesys/base/sm-full -a sm-full -- -q    -f run sm-full < /dev/null 2> tests/filesys/base/sm-full.errors |tee tests/filesys/base/sm-full.output
Copying tests/filesys/base/sm-full to scratch partition...
qemu -hda /tmp/Gf53TwrGmy.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run sm-full
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 105 sectors (52 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'sm-full' into the file system...
Erasing ustar archive...
Executing 'sm-full':
(sm-full) begin
(sm-full) create "quux"
(sm-full) open "quux"
(sm-full) writing "quux"
(sm-full) close "quux"
(sm-full) open "quux" for verification
(sm-full) verified contents of "quux"
(sm-full) close "quux"
(sm-full) end
sm-full: exit(0)
Execution of 'sm-full' complete.
Timer: 74 ticks
Thread: 0 idle ticks, 69 kernel ticks, 5 user ticks
hda2 (filesys): 98 reads, 242 writes
hda3 (scratch): 104 reads, 2 writes
Console: 1065 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
perl -I../.. ../../tests/filesys/base/sm-full.ck tests/filesys/base/sm-full tests/filesys/base/sm-full.result
pass tests/filesys/base/sm-full
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/filesys/base/sm-random -a sm-random -- -q    -f run sm-random < /dev/null 2> tests/filesys/base/sm-random.errors |tee tests/filesys/base/sm-random.output
Copying tests/filesys/base/sm-random to scratch partition...
qemu -hda /tmp/iQT6QE7n3N.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run sm-random
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 107 sectors (53 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'sm-random' into the file system...
Erasing ustar archive...
Executing 'sm-random':
(sm-random) begin
(sm-random) create "bazzle"
(sm-random) open "bazzle"
(sm-random) write "bazzle" in random order
(sm-random) read "bazzle" in random order
(sm-random) close "bazzle"
(sm-random) end
sm-random: exit(0)
Execution of 'sm-random' complete.
Timer: 87 ticks
Thread: 0 idle ticks, 67 kernel ticks, 20 user ticks
hda2 (filesys): 334 reads, 352 writes
hda3 (scratch): 106 reads, 2 writes
Console: 1053 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
perl -I../.. ../../tests/filesys/base/sm-random.ck tests/filesys/base/sm-random tests/filesys/base/sm-random.result
pass tests/filesys/base/sm-random
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/filesys/base/sm-seq-block -a sm-seq-block -- -q    -f run sm-seq-block < /dev/null 2> tests/filesys/base/sm-seq-block.errors |tee tests/filesys/base/sm-seq-block.output
Copying tests/filesys/base/sm-seq-block to scratch partition...
qemu -hda /tmp/cbZaU_KLpW.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run sm-seq-block
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 105 sectors (52 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'sm-seq-block' into the file system...
Erasing ustar archive...
Executing 'sm-seq-block':
(sm-seq-block) begin
(sm-seq-block) create "noodle"
(sm-seq-block) open "noodle"
(sm-seq-block) writing "noodle"
(sm-seq-block) close "noodle"
(sm-seq-block) open "noodle" for verification
(sm-seq-block) verified contents of "noodle"
(sm-seq-block) close "noodle"
(sm-seq-block) end
sm-seq-block: exit(0)
Execution of 'sm-seq-block' complete.
Timer: 75 ticks
Thread: 0 idle ticks, 67 kernel ticks, 8 user ticks
hda2 (filesys): 119 reads, 253 writes
hda3 (scratch): 104 reads, 2 writes
Console: 1150 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
perl -I../.. ../../tests/filesys/base/sm-seq-block.ck tests/filesys/base/sm-seq-block tests/filesys/base/sm-seq-block.result
pass tests/filesys/base/sm-seq-block
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/filesys/base/sm-seq-random -a sm-seq-random -- -q    -f run sm-seq-random < /dev/null 2> tests/filesys/base/sm-seq-random.errors |tee tests/filesys/base/sm-seq-random.output
Copying tests/filesys/base/sm-seq-random to scratch partition...
qemu -hda /tmp/8jIayQHHUN.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run sm-seq-random
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  183,296,000 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 105 sectors (52 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'sm-seq-random' into the file system...
Erasing ustar archive...
Executing 'sm-seq-random':
(sm-seq-random) begin
(sm-seq-random) create "nibble"
(sm-seq-random) open "nibble"
(sm-seq-random) writing "nibble"
(sm-seq-random) close "nibble"
(sm-seq-random) open "nibble" for verification
(sm-seq-random) verified contents of "nibble"
(sm-seq-random) close "nibble"
(sm-seq-random) end
sm-seq-random: exit(0)
Execution of 'sm-seq-random' complete.
Timer: 84 ticks
Thread: 0 idle ticks, 71 kernel ticks, 13 user ticks
hda2 (filesys): 112 reads, 250 writes
hda3 (scratch): 104 reads, 2 writes
Console: 1165 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
perl -I../.. ../../tests/filesys/base/sm-seq-random.ck tests/filesys/base/sm-seq-random tests/filesys/base/sm-seq-random.result
pass tests/filesys/base/sm-seq-random
pintos -v -k -T 300 --qemu  --filesys-size=2 -p tests/filesys/base/syn-read -a syn-read -p tests/filesys/base/child-syn-read -a child-syn-read -- -q    -f run syn-read < /dev/null 2> tests/filesys/base/syn-read.errors |tee tests/filesys/base/syn-read.output
Copying tests/filesys/base/syn-read to scratch partition...
Copying tests/filesys/base/child-syn-read to scratch partition...
qemu -hda /tmp/mKWyXu2oD9.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run syn-read
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 220 sectors (110 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'syn-read' into the file system...
Putting 'child-syn-read' into the file system...
Erasing ustar archive...
Executing 'syn-read':
(syn-read) begin
(syn-read) create "data"
(syn-read) open "data"
(syn-read) write "data"
(syn-read) close "data"
(syn-read) exec child 1 of 10: "child-syn-read 0"
child-syn-read: exit(0)
(syn-read) exec child 2 of 10: "child-syn-read 1"
child-syn-read: exit(1)
(syn-read) exec child 3 of 10: "child-syn-read 2"
child-syn-read: exit(2)
(syn-read) exec child 4 of 10: "child-syn-read 3"
child-syn-read: exit(3)
(syn-read) exec child 5 of 10: "child-syn-read 4"
child-syn-read: exit(4)
(syn-read) exec child 6 of 10: "child-syn-read 5"
child-syn-read: exit(5)
(syn-read) exec child 7 of 10: "child-syn-read 6"
child-syn-read: exit(6)
(syn-read) exec child 8 of 10: "child-syn-read 7"
child-syn-read: exit(7)
(syn-read) exec child 9 of 10: "child-syn-read 8"
child-syn-read: exit(8)
(syn-read) exec child 10 of 10: "child-syn-read 9"
child-syn-read: exit(9)
(syn-read) wait for child 1 of 10 returned 0 (expected 0)
(syn-read) wait for child 2 of 10 returned 1 (expected 1)
(syn-read) wait for child 3 of 10 returned 2 (expected 2)
(syn-read) wait for child 4 of 10 returned 3 (expected 3)
(syn-read) wait for child 5 of 10 returned 4 (expected 4)
(syn-read) wait for child 6 of 10 returned 5 (expected 5)
(syn-read) wait for child 7 of 10 returned 6 (expected 6)
(syn-read) wait for child 8 of 10 returned 7 (expected 7)
(syn-read) wait for child 9 of 10 returned 8 (expected 8)
(syn-read) wait for child 10 of 10 returned 9 (expected 9)
(syn-read) end
syn-read: exit(0)
Execution of 'syn-read' complete.
Timer: 257 ticks
Thread: 0 idle ticks, 101 kernel ticks, 156 user ticks
hda2 (filesys): 10524 reads, 454 writes
hda3 (scratch): 219 reads, 2 writes
Console: 2353 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
perl -I../.. ../../tests/filesys/base/syn-read.ck tests/filesys/base/syn-read tests/filesys/base/syn-read.result
pass tests/filesys/base/syn-read
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/filesys/base/syn-remove -a syn-remove -- -q    -f run syn-remove < /dev/null 2> tests/filesys/base/syn-remove.errors |tee tests/filesys/base/syn-remove.output
Copying tests/filesys/base/syn-remove to scratch partition...
qemu -hda /tmp/aqyHVfqQUo.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run syn-remove
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 106 sectors (53 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'syn-remove' into the file system...
Erasing ustar archive...
Executing 'syn-remove':
(syn-remove) begin
(syn-remove) create "deleteme"
(syn-remove) open "deleteme"
(syn-remove) remove "deleteme"
(syn-remove) write "deleteme"
(syn-remove) seek "deleteme" to 0
(syn-remove) read "deleteme"
(syn-remove) close "deleteme"
(syn-remove) end
syn-remove: exit(0)
Execution of 'syn-remove' complete.
Timer: 72 ticks
Thread: 0 idle ticks, 68 kernel ticks, 4 user ticks
hda2 (filesys): 90 reads, 229 writes
hda3 (scratch): 105 reads, 2 writes
Console: 1106 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
perl -I../.. ../../tests/filesys/base/syn-remove.ck tests/filesys/base/syn-remove tests/filesys/base/syn-remove.result
pass tests/filesys/base/syn-remove
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/filesys/base/syn-write -a syn-write -p tests/filesys/base/child-syn-wrt -a child-syn-wrt -- -q    -f run syn-write < /dev/null 2> tests/filesys/base/syn-write.errors |tee tests/filesys/base/syn-write.output
Copying tests/filesys/base/syn-write to scratch partition...
Copying tests/filesys/base/child-syn-wrt to scratch partition...
qemu -hda /tmp/fJzylJhNex.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run syn-write
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 220 sectors (110 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'syn-write' into the file system...
Putting 'child-syn-wrt' into the file system...
Erasing ustar archive...
Executing 'syn-write':
(syn-write) begin
(syn-write) create "stuff"
(syn-write) exec child 1 of 10: "child-syn-wrt 0"
child-syn-wrt: exit(0)
(syn-write) exec child 2 of 10: "child-syn-wrt 1"
child-syn-wrt: exit(1)
(syn-write) exec child 3 of 10: "child-syn-wrt 2"
child-syn-wrt: exit(2)
(syn-write) exec child 4 of 10: "child-syn-wrt 3"
child-syn-wrt: exit(3)
(syn-write) exec child 5 of 10: "child-syn-wrt 4"
child-syn-wrt: exit(4)
(syn-write) exec child 6 of 10: "child-syn-wrt 5"
child-syn-wrt: exit(5)
(syn-write) exec child 7 of 10: "child-syn-wrt 6"
child-syn-wrt: exit(6)
(syn-write) exec child 8 of 10: "child-syn-wrt 7"
child-syn-wrt: exit(7)
(syn-write) exec child 9 of 10: "child-syn-wrt 8"
child-syn-wrt: exit(8)
(syn-write) exec child 10 of 10: "child-syn-wrt 9"
child-syn-wrt: exit(9)
(syn-write) wait for child 1 of 10 returned 0 (expected 0)
(syn-write) wait for child 2 of 10 returned 1 (expected 1)
(syn-write) wait for child 3 of 10 returned 2 (expected 2)
(syn-write) wait for child 4 of 10 returned 3 (expected 3)
(syn-write) wait for child 5 of 10 returned 4 (expected 4)
(syn-write) wait for child 6 of 10 returned 5 (expected 5)
(syn-write) wait for child 7 of 10 returned 6 (expected 6)
(syn-write) wait for child 8 of 10 returned 7 (expected 7)
(syn-write) wait for child 9 of 10 returned 8 (expected 8)
(syn-write) wait for child 10 of 10 returned 9 (expected 9)
(syn-write) open "stuff"
(syn-write) read "stuff"
(syn-write) end
syn-write: exit(0)
Execution of 'syn-write' complete.
Timer: 109 ticks
Thread: 0 idle ticks, 93 kernel ticks, 16 user ticks
hda2 (filesys): 294 reads, 470 writes
hda3 (scratch): 219 reads, 2 writes
Console: 2336 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
perl -I../.. ../../tests/filesys/base/syn-write.ck tests/filesys/base/syn-write tests/filesys/base/syn-write.result
pass tests/filesys/base/syn-write
rm -f tmp.dsk
pintos-mkdisk tmp.dsk --filesys-size=2
pintos -v -k -T 60 --qemu  --disk=tmp.dsk -p tests/filesys/extended/dir-empty-name -a dir-empty-name -p tests/filesys/extended/tar -a tar -- -q    -f run dir-empty-name < /dev/null 2> tests/filesys/extended/dir-empty-name.errors |tee tests/filesys/extended/dir-empty-name.output
Copying tests/filesys/extended/dir-empty-name to scratch partition...
Copying tests/filesys/extended/tar to scratch partition...
qemu -hda /tmp/YP6T9C3pnL.dsk -hdb tmp.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run dir-empty-name
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 1,008 sectors (504 kB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 225 sectors (112 kB), Pintos scratch (22)
hdb: 5,040 sectors (2 MB), model "QM00002", serial "QEMU HARDDISK"
hdb1: 4,096 sectors (2 MB), Pintos file system (21)
filesys: using hdb1
scratch: using hda2
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'dir-empty-name' into the file system...
Putting 'tar' into the file system...
Erasing ustar archive...
Executing 'dir-empty-name':
(dir-empty-name) begin
(dir-empty-name) mkdir "" (must return false)
Execution of 'dir-empty-name' complete.
Timer: 81 ticks
Thread: 0 idle ticks, 80 kernel ticks, 1 user ticks
hdb1 (filesys): 82 reads, 456 writes
hda2 (scratch): 224 reads, 2 writes
Console: 1029 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
pintos -v -k -T 60  --qemu --disk=tmp.dsk -g fs.tar -a tests/filesys/extended/dir-empty-name.tar -- -q  run 'tar fs.tar /' < /dev/null 2> tests/filesys/extended/dir-empty-name-persistence.errors |tee tests/filesys/extended/dir-empty-name-persistence.output
qemu -hda /tmp/waLZQu9RCR.dsk -hdb tmp.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q run 'tar fs.tar /' append fs.tar
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 3,024 sectors (1 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 2,048 sectors (1 MB), Pintos scratch (22)
hdb: 5,040 sectors (2 MB), model "QM00002", serial "QEMU HARDDISK"
hdb1: 4,096 sectors (2 MB), Pintos file system (21)
filesys: using hdb1
scratch: using hda2
Boot complete.
Executing 'tar fs.tar /':
/: open failed
error writing archive
tar: exit(1)
Execution of 'tar fs.tar /' complete.
Appending 'fs.tar' to ustar archive on scratch device...
Timer: 55 ticks
Thread: 0 idle ticks, 52 kernel ticks, 3 user ticks
hdb1 (filesys): 88 reads, 4 writes
hda2 (scratch): 0 reads, 3 writes
Console: 852 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
Copying tests/filesys/extended/dir-empty-name.tar out of /tmp/waLZQu9RCR.dsk...
rm -f tmp.dsk
perl -I../.. ../../tests/filesys/extended/dir-empty-name.ck tests/filesys/extended/dir-empty-name tests/filesys/extended/dir-empty-name.result
FAIL tests/filesys/extended/dir-empty-name
Test output failed to match any acceptable form.

Acceptable output:
  (dir-empty-name) begin
  (dir-empty-name) mkdir "" (must return false)
  (dir-empty-name) end
Differences in `diff -u' format:
  (dir-empty-name) begin
  (dir-empty-name) mkdir "" (must return false)
- (dir-empty-name) end

(Process exit codes are excluded for matching purposes.)
rm -f tmp.dsk
pintos-mkdisk tmp.dsk --filesys-size=2
pintos -v -k -T 60 --qemu  --disk=tmp.dsk -p tests/filesys/extended/dir-mk-tree -a dir-mk-tree -p tests/filesys/extended/tar -a tar -- -q    -f run dir-mk-tree < /dev/null 2> tests/filesys/extended/dir-mk-tree.errors |tee tests/filesys/extended/dir-mk-tree.output
Copying tests/filesys/extended/dir-mk-tree to scratch partition...
Copying tests/filesys/extended/tar to scratch partition...
qemu -hda /tmp/mHVIW9XLLA.dsk -hdb tmp.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run dir-mk-tree
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 1,008 sectors (504 kB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 230 sectors (115 kB), Pintos scratch (22)
hdb: 5,040 sectors (2 MB), model "QM00002", serial "QEMU HARDDISK"
hdb1: 4,096 sectors (2 MB), Pintos file system (21)
filesys: using hdb1
scratch: using hda2
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'dir-mk-tree' into the file system...
Putting 'tar' into the file system...
Erasing ustar archive...
Executing 'dir-mk-tree':
(dir-mk-tree) begin
(dir-mk-tree) creating /0/0/0/0 through /3/2/2/3...
Execution of 'dir-mk-tree' complete.
Timer: 84 ticks
Thread: 0 idle ticks, 83 kernel ticks, 1 user ticks
hdb1 (filesys): 84 reads, 466 writes
hda2 (scratch): 229 reads, 2 writes
Console: 1020 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
pintos -v -k -T 60  --qemu --disk=tmp.dsk -g fs.tar -a tests/filesys/extended/dir-mk-tree.tar -- -q  run 'tar fs.tar /' < /dev/null 2> tests/filesys/extended/dir-mk-tree-persistence.errors |tee tests/filesys/extended/dir-mk-tree-persistence.output
qemu -hda /tmp/pSug9QHlTD.dsk -hdb tmp.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q run 'tar fs.tar /' append fs.tar
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 3,024 sectors (1 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 2,048 sectors (1 MB), Pintos scratch (22)
hdb: 5,040 sectors (2 MB), model "QM00002", serial "QEMU HARDDISK"
hdb1: 4,096 sectors (2 MB), Pintos file system (21)
filesys: using hdb1
scratch: using hda2
Boot complete.
Executing 'tar fs.tar /':
/: open failed
error writing archive
tar: exit(1)
Execution of 'tar fs.tar /' complete.
Appending 'fs.tar' to ustar archive on scratch device...
Timer: 53 ticks
Thread: 0 idle ticks, 51 kernel ticks, 2 user ticks
hdb1 (filesys): 88 reads, 4 writes
hda2 (scratch): 0 reads, 3 writes
Console: 852 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
Copying tests/filesys/extended/dir-mk-tree.tar out of /tmp/pSug9QHlTD.dsk...
rm -f tmp.dsk
perl -I../.. ../../tests/filesys/extended/dir-mk-tree.ck tests/filesys/extended/dir-mk-tree tests/filesys/extended/dir-mk-tree.result
FAIL tests/filesys/extended/dir-mk-tree
Test output failed to match any acceptable form.

Acceptable output:
  (dir-mk-tree) begin
  (dir-mk-tree) creating /0/0/0/0 through /3/2/2/3...
  (dir-mk-tree) open "/0/2/0/3"
  (dir-mk-tree) close "/0/2/0/3"
  (dir-mk-tree) end
Differences in `diff -u' format:
  (dir-mk-tree) begin
  (dir-mk-tree) creating /0/0/0/0 through /3/2/2/3...
- (dir-mk-tree) open "/0/2/0/3"
- (dir-mk-tree) close "/0/2/0/3"
- (dir-mk-tree) end

(Process exit codes are excluded for matching purposes.)
rm -f tmp.dsk
pintos-mkdisk tmp.dsk --filesys-size=2
pintos -v -k -T 60 --qemu  --disk=tmp.dsk -p tests/filesys/extended/dir-mkdir -a dir-mkdir -p tests/filesys/extended/tar -a tar -- -q    -f run dir-mkdir < /dev/null 2> tests/filesys/extended/dir-mkdir.errors |tee tests/filesys/extended/dir-mkdir.output
Copying tests/filesys/extended/dir-mkdir to scratch partition...
Copying tests/filesys/extended/tar to scratch partition...
qemu -hda /tmp/LvN2tVKdPf.dsk -hdb tmp.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run dir-mkdir
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  157,081,600 loops/s.
hda: 1,008 sectors (504 kB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 226 sectors (113 kB), Pintos scratch (22)
hdb: 5,040 sectors (2 MB), model "QM00002", serial "QEMU HARDDISK"
hdb1: 4,096 sectors (2 MB), Pintos file system (21)
filesys: using hdb1
scratch: using hda2
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'dir-mkdir' into the file system...
Putting 'tar' into the file system...
Erasing ustar archive...
Executing 'dir-mkdir':
(dir-mkdir) begin
(dir-mkdir) mkdir "a"
Execution of 'dir-mkdir' complete.
Timer: 91 ticks
Thread: 0 idle ticks, 90 kernel ticks, 1 user ticks
hdb1 (filesys): 82 reads, 458 writes
hda2 (scratch): 225 reads, 2 writes
Console: 980 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
pintos -v -k -T 60  --qemu --disk=tmp.dsk -g fs.tar -a tests/filesys/extended/dir-mkdir.tar -- -q  run 'tar fs.tar /' < /dev/null 2> tests/filesys/extended/dir-mkdir-persistence.errors |tee tests/filesys/extended/dir-mkdir-persistence.output
qemu -hda /tmp/mZJDXqGcgD.dsk -hdb tmp.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q run 'tar fs.tar /' append fs.tar
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 3,024 sectors (1 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 2,048 sectors (1 MB), Pintos scratch (22)
hdb: 5,040 sectors (2 MB), model "QM00002", serial "QEMU HARDDISK"
hdb1: 4,096 sectors (2 MB), Pintos file system (21)
filesys: using hdb1
scratch: using hda2
Boot complete.
Executing 'tar fs.tar /':
/: open failed
error writing archive
tar: exit(1)
Execution of 'tar fs.tar /' complete.
Appending 'fs.tar' to ustar archive on scratch device...
Timer: 57 ticks
Thread: 0 idle ticks, 53 kernel ticks, 4 user ticks
hdb1 (filesys): 88 reads, 4 writes
hda2 (scratch): 0 reads, 3 writes
Console: 852 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
Copying tests/filesys/extended/dir-mkdir.tar out of /tmp/mZJDXqGcgD.dsk...
rm -f tmp.dsk
perl -I../.. ../../tests/filesys/extended/dir-mkdir.ck tests/filesys/extended/dir-mkdir tests/filesys/extended/dir-mkdir.result
FAIL tests/filesys/extended/dir-mkdir
Test output failed to match any acceptable form.

Acceptable output:
  (dir-mkdir) begin
  (dir-mkdir) mkdir "a"
  (dir-mkdir) create "a/b"
  (dir-mkdir) chdir "a"
  (dir-mkdir) open "b"
  (dir-mkdir) end
Differences in `diff -u' format:
  (dir-mkdir) begin
  (dir-mkdir) mkdir "a"
- (dir-mkdir) create "a/b"
- (dir-mkdir) chdir "a"
- (dir-mkdir) open "b"
- (dir-mkdir) end

(Process exit codes are excluded for matching purposes.)
rm -f tmp.dsk
pintos-mkdisk tmp.dsk --filesys-size=2
pintos -v -k -T 60 --qemu  --disk=tmp.dsk -p tests/filesys/extended/dir-open -a dir-open -p tests/filesys/extended/tar -a tar -- -q    -f run dir-open < /dev/null 2> tests/filesys/extended/dir-open.errors |tee tests/filesys/extended/dir-open.output
Copying tests/filesys/extended/dir-open to scratch partition...
Copying tests/filesys/extended/tar to scratch partition...
qemu -hda /tmp/dptU1vRnAt.dsk -hdb tmp.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run dir-open
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  78,540,800 loops/s.
hda: 1,008 sectors (504 kB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 226 sectors (113 kB), Pintos scratch (22)
hdb: 5,040 sectors (2 MB), model "QM00002", serial "QEMU HARDDISK"
hdb1: 4,096 sectors (2 MB), Pintos file system (21)
filesys: using hdb1
scratch: using hda2
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'dir-open' into the file system...
Putting 'tar' into the file system...
Erasing ustar archive...
Executing 'dir-open':
(dir-open) begin
(dir-open) mkdir "xyzzy"
Execution of 'dir-open' complete.
Timer: 82 ticks
Thread: 0 idle ticks, 81 kernel ticks, 1 user ticks
hdb1 (filesys): 83 reads, 458 writes
hda2 (scratch): 225 reads, 2 writes
Console: 977 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
pintos -v -k -T 60  --qemu --disk=tmp.dsk -g fs.tar -a tests/filesys/extended/dir-open.tar -- -q  run 'tar fs.tar /' < /dev/null 2> tests/filesys/extended/dir-open-persistence.errors |tee tests/filesys/extended/dir-open-persistence.output
qemu -hda /tmp/rh73TSoILb.dsk -hdb tmp.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q run 'tar fs.tar /' append fs.tar
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 3,024 sectors (1 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 2,048 sectors (1 MB), Pintos scratch (22)
hdb: 5,040 sectors (2 MB), model "QM00002", serial "QEMU HARDDISK"
hdb1: 4,096 sectors (2 MB), Pintos file system (21)
filesys: using hdb1
scratch: using hda2
Boot complete.
Executing 'tar fs.tar /':
/: open failed
error writing archive
tar: exit(1)
Execution of 'tar fs.tar /' complete.
Appending 'fs.tar' to ustar archive on scratch device...
Timer: 55 ticks
Thread: 0 idle ticks, 53 kernel ticks, 2 user ticks
hdb1 (filesys): 88 reads, 4 writes
hda2 (scratch): 0 reads, 3 writes
Console: 852 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
Copying tests/filesys/extended/dir-open.tar out of /tmp/rh73TSoILb.dsk...
rm -f tmp.dsk
perl -I../.. ../../tests/filesys/extended/dir-open.ck tests/filesys/extended/dir-open tests/filesys/extended/dir-open.result
FAIL tests/filesys/extended/dir-open
Test output failed to match any acceptable form.

Acceptable output:
  (dir-open) begin
  (dir-open) mkdir "xyzzy"
  (dir-open) open "xyzzy"
  (dir-open) write "xyzzy"
  (dir-open) write "xyzzy" (must return -1, actually -1)
  (dir-open) end
  dir-open: exit(0)
Differences in `diff -u' format:
  (dir-open) begin
  (dir-open) mkdir "xyzzy"
- (dir-open) open "xyzzy"
- (dir-open) write "xyzzy"
- (dir-open) write "xyzzy" (must return -1, actually -1)
- (dir-open) end
- dir-open: exit(0)
Acceptable output:
  (dir-open) begin
  (dir-open) mkdir "xyzzy"
  (dir-open) open "xyzzy"
  (dir-open) write "xyzzy"
  dir-open: exit(-1)
Differences in `diff -u' format:
  (dir-open) begin
  (dir-open) mkdir "xyzzy"
- (dir-open) open "xyzzy"
- (dir-open) write "xyzzy"
- dir-open: exit(-1)
rm -f tmp.dsk
pintos-mkdisk tmp.dsk --filesys-size=2
pintos -v -k -T 60 --qemu  --disk=tmp.dsk -p tests/filesys/extended/dir-over-file -a dir-over-file -p tests/filesys/extended/tar -a tar -- -q    -f run dir-over-file < /dev/null 2> tests/filesys/extended/dir-over-file.errors |tee tests/filesys/extended/dir-over-file.output
Copying tests/filesys/extended/dir-over-file to scratch partition...
Copying tests/filesys/extended/tar to scratch partition...
qemu -hda /tmp/RUvd7GXEgq.dsk -hdb tmp.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run dir-over-file
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 1,008 sectors (504 kB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 225 sectors (112 kB), Pintos scratch (22)
hdb: 5,040 sectors (2 MB), model "QM00002", serial "QEMU HARDDISK"
hdb1: 4,096 sectors (2 MB), Pintos file system (21)
filesys: using hdb1
scratch: using hda2
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'dir-over-file' into the file system...
Putting 'tar' into the file system...
Erasing ustar archive...
Executing 'dir-over-file':
(dir-over-file) begin
(dir-over-file) mkdir "abc"
Execution of 'dir-over-file' complete.
Timer: 84 ticks
Thread: 0 idle ticks, 83 kernel ticks, 1 user ticks
hdb1 (filesys): 82 reads, 456 writes
hda2 (scratch): 224 reads, 2 writes
Console: 1006 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
pintos -v -k -T 60  --qemu --disk=tmp.dsk -g fs.tar -a tests/filesys/extended/dir-over-file.tar -- -q  run 'tar fs.tar /' < /dev/null 2> tests/filesys/extended/dir-over-file-persistence.errors |tee tests/filesys/extended/dir-over-file-persistence.output
qemu -hda /tmp/h3LuZ5OMK0.dsk -hdb tmp.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q run 'tar fs.tar /' append fs.tar
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 3,024 sectors (1 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 2,048 sectors (1 MB), Pintos scratch (22)
hdb: 5,040 sectors (2 MB), model "QM00002", serial "QEMU HARDDISK"
hdb1: 4,096 sectors (2 MB), Pintos file system (21)
filesys: using hdb1
scratch: using hda2
Boot complete.
Executing 'tar fs.tar /':
/: open failed
error writing archive
tar: exit(1)
Execution of 'tar fs.tar /' complete.
Appending 'fs.tar' to ustar archive on scratch device...
Timer: 55 ticks
Thread: 0 idle ticks, 53 kernel ticks, 2 user ticks
hdb1 (filesys): 88 reads, 4 writes
hda2 (scratch): 0 reads, 3 writes
Console: 852 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
Copying tests/filesys/extended/dir-over-file.tar out of /tmp/h3LuZ5OMK0.dsk...
rm -f tmp.dsk
perl -I../.. ../../tests/filesys/extended/dir-over-file.ck tests/filesys/extended/dir-over-file tests/filesys/extended/dir-over-file.result
FAIL tests/filesys/extended/dir-over-file
Test output failed to match any acceptable form.

Acceptable output:
  (dir-over-file) begin
  (dir-over-file) mkdir "abc"
  (dir-over-file) create "abc" (must return false)
  (dir-over-file) end
Differences in `diff -u' format:
  (dir-over-file) begin
  (dir-over-file) mkdir "abc"
- (dir-over-file) create "abc" (must return false)
- (dir-over-file) end

(Process exit codes are excluded for matching purposes.)
rm -f tmp.dsk
pintos-mkdisk tmp.dsk --filesys-size=2
pintos -v -k -T 60 --qemu  --disk=tmp.dsk -p tests/filesys/extended/dir-rm-cwd -a dir-rm-cwd -p tests/filesys/extended/tar -a tar -- -q    -f run dir-rm-cwd < /dev/null 2> tests/filesys/extended/dir-rm-cwd.errors |tee tests/filesys/extended/dir-rm-cwd.output
Copying tests/filesys/extended/dir-rm-cwd to scratch partition...
Copying tests/filesys/extended/tar to scratch partition...
qemu -hda /tmp/QGyPhiSIqx.dsk -hdb tmp.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run dir-rm-cwd
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 1,008 sectors (504 kB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 230 sectors (115 kB), Pintos scratch (22)
hdb: 5,040 sectors (2 MB), model "QM00002", serial "QEMU HARDDISK"
hdb1: 4,096 sectors (2 MB), Pintos file system (21)
filesys: using hdb1
scratch: using hda2
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'dir-rm-cwd' into the file system...
Putting 'tar' into the file system...
Erasing ustar archive...
Executing 'dir-rm-cwd':
(dir-rm-cwd) begin
(dir-rm-cwd) open "/"
(dir-rm-cwd) open "/": FAILED
dir-rm-cwd: exit(1)
Execution of 'dir-rm-cwd' complete.
Timer: 88 ticks
Thread: 0 idle ticks, 86 kernel ticks, 2 user ticks
hdb1 (filesys): 102 reads, 466 writes
hda2 (scratch): 229 reads, 2 writes
Console: 1036 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
pintos -v -k -T 60  --qemu --disk=tmp.dsk -g fs.tar -a tests/filesys/extended/dir-rm-cwd.tar -- -q  run 'tar fs.tar /' < /dev/null 2> tests/filesys/extended/dir-rm-cwd-persistence.errors |tee tests/filesys/extended/dir-rm-cwd-persistence.output
qemu -hda /tmp/e5m9yjk4m0.dsk -hdb tmp.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q run 'tar fs.tar /' append fs.tar
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 3,024 sectors (1 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 2,048 sectors (1 MB), Pintos scratch (22)
hdb: 5,040 sectors (2 MB), model "QM00002", serial "QEMU HARDDISK"
hdb1: 4,096 sectors (2 MB), Pintos file system (21)
filesys: using hdb1
scratch: using hda2
Boot complete.
Executing 'tar fs.tar /':
/: open failed
error writing archive
tar: exit(1)
Execution of 'tar fs.tar /' complete.
Appending 'fs.tar' to ustar archive on scratch device...
Timer: 54 ticks
Thread: 0 idle ticks, 52 kernel ticks, 2 user ticks
hdb1 (filesys): 88 reads, 4 writes
hda2 (scratch): 0 reads, 3 writes
Console: 852 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
Copying tests/filesys/extended/dir-rm-cwd.tar out of /tmp/e5m9yjk4m0.dsk...
rm -f tmp.dsk
perl -I../.. ../../tests/filesys/extended/dir-rm-cwd.ck tests/filesys/extended/dir-rm-cwd tests/filesys/extended/dir-rm-cwd.result
FAIL tests/filesys/extended/dir-rm-cwd
run: open "/": FAILED
rm -f tmp.dsk
pintos-mkdisk tmp.dsk --filesys-size=2
pintos -v -k -T 60 --qemu  --disk=tmp.dsk -p tests/filesys/extended/dir-rm-parent -a dir-rm-parent -p tests/filesys/extended/tar -a tar -- -q    -f run dir-rm-parent < /dev/null 2> tests/filesys/extended/dir-rm-parent.errors |tee tests/filesys/extended/dir-rm-parent.output
Copying tests/filesys/extended/dir-rm-parent to scratch partition...
Copying tests/filesys/extended/tar to scratch partition...
qemu -hda /tmp/2oNSkm6wbm.dsk -hdb tmp.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run dir-rm-parent
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 1,008 sectors (504 kB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 226 sectors (113 kB), Pintos scratch (22)
hdb: 5,040 sectors (2 MB), model "QM00002", serial "QEMU HARDDISK"
hdb1: 4,096 sectors (2 MB), Pintos file system (21)
filesys: using hdb1
scratch: using hda2
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'dir-rm-parent' into the file system...
Putting 'tar' into the file system...
Erasing ustar archive...
Executing 'dir-rm-parent':
(dir-rm-parent) begin
(dir-rm-parent) mkdir "a"
Execution of 'dir-rm-parent' complete.
Timer: 84 ticks
Thread: 0 idle ticks, 83 kernel ticks, 1 user ticks
hdb1 (filesys): 83 reads, 458 writes
hda2 (scratch): 225 reads, 2 writes
Console: 1004 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
pintos -v -k -T 60  --qemu --disk=tmp.dsk -g fs.tar -a tests/filesys/extended/dir-rm-parent.tar -- -q  run 'tar fs.tar /' < /dev/null 2> tests/filesys/extended/dir-rm-parent-persistence.errors |tee tests/filesys/extended/dir-rm-parent-persistence.output
qemu -hda /tmp/coQ3z3FYFa.dsk -hdb tmp.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q run 'tar fs.tar /' append fs.tar
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 3,024 sectors (1 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 2,048 sectors (1 MB), Pintos scratch (22)
hdb: 5,040 sectors (2 MB), model "QM00002", serial "QEMU HARDDISK"
hdb1: 4,096 sectors (2 MB), Pintos file system (21)
filesys: using hdb1
scratch: using hda2
Boot complete.
Executing 'tar fs.tar /':
/: open failed
error writing archive
tar: exit(1)
Execution of 'tar fs.tar /' complete.
Appending 'fs.tar' to ustar archive on scratch device...
Timer: 55 ticks
Thread: 0 idle ticks, 53 kernel ticks, 2 user ticks
hdb1 (filesys): 88 reads, 4 writes
hda2 (scratch): 0 reads, 3 writes
Console: 852 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
Copying tests/filesys/extended/dir-rm-parent.tar out of /tmp/coQ3z3FYFa.dsk...
rm -f tmp.dsk
perl -I../.. ../../tests/filesys/extended/dir-rm-parent.ck tests/filesys/extended/dir-rm-parent tests/filesys/extended/dir-rm-parent.result
FAIL tests/filesys/extended/dir-rm-parent
Test output failed to match any acceptable form.

Acceptable output:
  (dir-rm-parent) begin
  (dir-rm-parent) mkdir "a"
  (dir-rm-parent) chdir "a"
  (dir-rm-parent) mkdir "b"
  (dir-rm-parent) chdir "b"
  (dir-rm-parent) remove "/a" (must fail)
  (dir-rm-parent) end
Differences in `diff -u' format:
  (dir-rm-parent) begin
  (dir-rm-parent) mkdir "a"
- (dir-rm-parent) chdir "a"
- (dir-rm-parent) mkdir "b"
- (dir-rm-parent) chdir "b"
- (dir-rm-parent) remove "/a" (must fail)
- (dir-rm-parent) end

(Process exit codes are excluded for matching purposes.)
rm -f tmp.dsk
pintos-mkdisk tmp.dsk --filesys-size=2
pintos -v -k -T 60 --qemu  --disk=tmp.dsk -p tests/filesys/extended/dir-rm-root -a dir-rm-root -p tests/filesys/extended/tar -a tar -- -q    -f run dir-rm-root < /dev/null 2> tests/filesys/extended/dir-rm-root.errors |tee tests/filesys/extended/dir-rm-root.output
Copying tests/filesys/extended/dir-rm-root to scratch partition...
Copying tests/filesys/extended/tar to scratch partition...
qemu -hda /tmp/PsnThGntqH.dsk -hdb tmp.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run dir-rm-root
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 1,008 sectors (504 kB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 225 sectors (112 kB), Pintos scratch (22)
hdb: 5,040 sectors (2 MB), model "QM00002", serial "QEMU HARDDISK"
hdb1: 4,096 sectors (2 MB), Pintos file system (21)
filesys: using hdb1
scratch: using hda2
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'dir-rm-root' into the file system...
Putting 'tar' into the file system...
Erasing ustar archive...
Executing 'dir-rm-root':
(dir-rm-root) begin
(dir-rm-root) remove "/" (must fail)
(dir-rm-root) create "/a"
(dir-rm-root) end
dir-rm-root: exit(0)
Execution of 'dir-rm-root' complete.
Timer: 84 ticks
Thread: 0 idle ticks, 82 kernel ticks, 2 user ticks
hdb1 (filesys): 120 reads, 461 writes
hda2 (scratch): 224 reads, 2 writes
Console: 1071 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
pintos -v -k -T 60  --qemu --disk=tmp.dsk -g fs.tar -a tests/filesys/extended/dir-rm-root.tar -- -q  run 'tar fs.tar /' < /dev/null 2> tests/filesys/extended/dir-rm-root-persistence.errors |tee tests/filesys/extended/dir-rm-root-persistence.output
qemu -hda /tmp/hbDq1FOkTD.dsk -hdb tmp.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q run 'tar fs.tar /' append fs.tar
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 3,024 sectors (1 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 2,048 sectors (1 MB), Pintos scratch (22)
hdb: 5,040 sectors (2 MB), model "QM00002", serial "QEMU HARDDISK"
hdb1: 4,096 sectors (2 MB), Pintos file system (21)
filesys: using hdb1
scratch: using hda2
Boot complete.
Executing 'tar fs.tar /':
/: open failed
error writing archive
tar: exit(1)
Execution of 'tar fs.tar /' complete.
Appending 'fs.tar' to ustar archive on scratch device...
Timer: 56 ticks
Thread: 0 idle ticks, 53 kernel ticks, 3 user ticks
hdb1 (filesys): 91 reads, 4 writes
hda2 (scratch): 0 reads, 3 writes
Console: 852 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
Copying tests/filesys/extended/dir-rm-root.tar out of /tmp/hbDq1FOkTD.dsk...
rm -f tmp.dsk
perl -I../.. ../../tests/filesys/extended/dir-rm-root.ck tests/filesys/extended/dir-rm-root tests/filesys/extended/dir-rm-root.result
pass tests/filesys/extended/dir-rm-root
rm -f tmp.dsk
pintos-mkdisk tmp.dsk --filesys-size=2
pintos -v -k -T 60 --qemu  --disk=tmp.dsk -p tests/filesys/extended/dir-rm-tree -a dir-rm-tree -p tests/filesys/extended/tar -a tar -- -q    -f run dir-rm-tree < /dev/null 2> tests/filesys/extended/dir-rm-tree.errors |tee tests/filesys/extended/dir-rm-tree.output
Copying tests/filesys/extended/dir-rm-tree to scratch partition...
Copying tests/filesys/extended/tar to scratch partition...
qemu -hda /tmp/jVldoVr41n.dsk -hdb tmp.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run dir-rm-tree
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 1,008 sectors (504 kB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 235 sectors (117 kB), Pintos scratch (22)
hdb: 5,040 sectors (2 MB), model "QM00002", serial "QEMU HARDDISK"
hdb1: 4,096 sectors (2 MB), Pintos file system (21)
filesys: using hdb1
scratch: using hda2
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'dir-rm-tree' into the file system...
Putting 'tar' into the file system...
Erasing ustar archive...
Executing 'dir-rm-tree':
(dir-rm-tree) begin
(dir-rm-tree) creating /0/0/0/0 through /3/2/2/3...
Execution of 'dir-rm-tree' complete.
Timer: 86 ticks
Thread: 0 idle ticks, 85 kernel ticks, 1 user ticks
hdb1 (filesys): 85 reads, 476 writes
hda2 (scratch): 234 reads, 2 writes
Console: 1020 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
pintos -v -k -T 60  --qemu --disk=tmp.dsk -g fs.tar -a tests/filesys/extended/dir-rm-tree.tar -- -q  run 'tar fs.tar /' < /dev/null 2> tests/filesys/extended/dir-rm-tree-persistence.errors |tee tests/filesys/extended/dir-rm-tree-persistence.output
qemu -hda /tmp/M0zAw7aLwm.dsk -hdb tmp.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q run 'tar fs.tar /' append fs.tar
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 3,024 sectors (1 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 2,048 sectors (1 MB), Pintos scratch (22)
hdb: 5,040 sectors (2 MB), model "QM00002", serial "QEMU HARDDISK"
hdb1: 4,096 sectors (2 MB), Pintos file system (21)
filesys: using hdb1
scratch: using hda2
Boot complete.
Executing 'tar fs.tar /':
/: open failed
error writing archive
tar: exit(1)
Execution of 'tar fs.tar /' complete.
Appending 'fs.tar' to ustar archive on scratch device...
Timer: 54 ticks
Thread: 0 idle ticks, 52 kernel ticks, 2 user ticks
hdb1 (filesys): 88 reads, 4 writes
hda2 (scratch): 0 reads, 3 writes
Console: 852 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
Copying tests/filesys/extended/dir-rm-tree.tar out of /tmp/M0zAw7aLwm.dsk...
rm -f tmp.dsk
perl -I../.. ../../tests/filesys/extended/dir-rm-tree.ck tests/filesys/extended/dir-rm-tree tests/filesys/extended/dir-rm-tree.result
FAIL tests/filesys/extended/dir-rm-tree
Test output failed to match any acceptable form.

Acceptable output:
  (dir-rm-tree) begin
  (dir-rm-tree) creating /0/0/0/0 through /3/2/2/3...
  (dir-rm-tree) open "/0/2/0/3"
  (dir-rm-tree) close "/0/2/0/3"
  (dir-rm-tree) removing /0/0/0/0 through /3/2/2/3...
  (dir-rm-tree) open "/3/0/2/0" (must return -1)
  (dir-rm-tree) end
Differences in `diff -u' format:
  (dir-rm-tree) begin
  (dir-rm-tree) creating /0/0/0/0 through /3/2/2/3...
- (dir-rm-tree) open "/0/2/0/3"
- (dir-rm-tree) close "/0/2/0/3"
- (dir-rm-tree) removing /0/0/0/0 through /3/2/2/3...
- (dir-rm-tree) open "/3/0/2/0" (must return -1)
- (dir-rm-tree) end

(Process exit codes are excluded for matching purposes.)
rm -f tmp.dsk
pintos-mkdisk tmp.dsk --filesys-size=2
pintos -v -k -T 60 --qemu  --disk=tmp.dsk -p tests/filesys/extended/dir-rmdir -a dir-rmdir -p tests/filesys/extended/tar -a tar -- -q    -f run dir-rmdir < /dev/null 2> tests/filesys/extended/dir-rmdir.errors |tee tests/filesys/extended/dir-rmdir.output
Copying tests/filesys/extended/dir-rmdir to scratch partition...
Copying tests/filesys/extended/tar to scratch partition...
qemu -hda /tmp/nfll0xYsgn.dsk -hdb tmp.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run dir-rmdir
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 1,008 sectors (504 kB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 226 sectors (113 kB), Pintos scratch (22)
hdb: 5,040 sectors (2 MB), model "QM00002", serial "QEMU HARDDISK"
hdb1: 4,096 sectors (2 MB), Pintos file system (21)
filesys: using hdb1
scratch: using hda2
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'dir-rmdir' into the file system...
Putting 'tar' into the file system...
Erasing ustar archive...
Executing 'dir-rmdir':
(dir-rmdir) begin
(dir-rmdir) mkdir "a"
Execution of 'dir-rmdir' complete.
Timer: 84 ticks
Thread: 0 idle ticks, 83 kernel ticks, 1 user ticks
hdb1 (filesys): 82 reads, 458 writes
hda2 (scratch): 225 reads, 2 writes
Console: 980 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
pintos -v -k -T 60  --qemu --disk=tmp.dsk -g fs.tar -a tests/filesys/extended/dir-rmdir.tar -- -q  run 'tar fs.tar /' < /dev/null 2> tests/filesys/extended/dir-rmdir-persistence.errors |tee tests/filesys/extended/dir-rmdir-persistence.output
qemu -hda /tmp/VKrEuFyGZE.dsk -hdb tmp.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q run 'tar fs.tar /' append fs.tar
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 3,024 sectors (1 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 2,048 sectors (1 MB), Pintos scratch (22)
hdb: 5,040 sectors (2 MB), model "QM00002", serial "QEMU HARDDISK"
hdb1: 4,096 sectors (2 MB), Pintos file system (21)
filesys: using hdb1
scratch: using hda2
Boot complete.
Executing 'tar fs.tar /':
/: open failed
error writing archive
tar: exit(1)
Execution of 'tar fs.tar /' complete.
Appending 'fs.tar' to ustar archive on scratch device...
Timer: 55 ticks
Thread: 0 idle ticks, 53 kernel ticks, 2 user ticks
hdb1 (filesys): 88 reads, 4 writes
hda2 (scratch): 0 reads, 3 writes
Console: 852 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
Copying tests/filesys/extended/dir-rmdir.tar out of /tmp/VKrEuFyGZE.dsk...
rm -f tmp.dsk
perl -I../.. ../../tests/filesys/extended/dir-rmdir.ck tests/filesys/extended/dir-rmdir tests/filesys/extended/dir-rmdir.result
FAIL tests/filesys/extended/dir-rmdir
Test output failed to match any acceptable form.

Acceptable output:
  (dir-rmdir) begin
  (dir-rmdir) mkdir "a"
  (dir-rmdir) rmdir "a"
  (dir-rmdir) chdir "a" (must return false)
  (dir-rmdir) end
Differences in `diff -u' format:
  (dir-rmdir) begin
  (dir-rmdir) mkdir "a"
- (dir-rmdir) rmdir "a"
- (dir-rmdir) chdir "a" (must return false)
- (dir-rmdir) end

(Process exit codes are excluded for matching purposes.)
rm -f tmp.dsk
pintos-mkdisk tmp.dsk --filesys-size=2
pintos -v -k -T 60 --qemu  --disk=tmp.dsk -p tests/filesys/extended/dir-under-file -a dir-under-file -p tests/filesys/extended/tar -a tar -- -q    -f run dir-under-file < /dev/null 2> tests/filesys/extended/dir-under-file.errors |tee tests/filesys/extended/dir-under-file.output
Copying tests/filesys/extended/dir-under-file to scratch partition...
Copying tests/filesys/extended/tar to scratch partition...
qemu -hda /tmp/4Un1tpvM_u.dsk -hdb tmp.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run dir-under-file
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 1,008 sectors (504 kB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 225 sectors (112 kB), Pintos scratch (22)
hdb: 5,040 sectors (2 MB), model "QM00002", serial "QEMU HARDDISK"
hdb1: 4,096 sectors (2 MB), Pintos file system (21)
filesys: using hdb1
scratch: using hda2
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'dir-under-file' into the file system...
Putting 'tar' into the file system...
Erasing ustar archive...
Executing 'dir-under-file':
(dir-under-file) begin
(dir-under-file) create "abc"
(dir-under-file) mkdir "abc" (must return false)
Execution of 'dir-under-file' complete.
Timer: 84 ticks
Thread: 0 idle ticks, 83 kernel ticks, 2 user ticks
hdb1 (filesys): 103 reads, 460 writes
hda2 (scratch): 224 reads, 2 writes
Console: 1063 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
pintos -v -k -T 60  --qemu --disk=tmp.dsk -g fs.tar -a tests/filesys/extended/dir-under-file.tar -- -q  run 'tar fs.tar /' < /dev/null 2> tests/filesys/extended/dir-under-file-persistence.errors |tee tests/filesys/extended/dir-under-file-persistence.output
qemu -hda /tmp/dyfHKlg1Q2.dsk -hdb tmp.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q run 'tar fs.tar /' append fs.tar
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 3,024 sectors (1 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 2,048 sectors (1 MB), Pintos scratch (22)
hdb: 5,040 sectors (2 MB), model "QM00002", serial "QEMU HARDDISK"
hdb1: 4,096 sectors (2 MB), Pintos file system (21)
filesys: using hdb1
scratch: using hda2
Boot complete.
Executing 'tar fs.tar /':
/: open failed
error writing archive
tar: exit(1)
Execution of 'tar fs.tar /' complete.
Appending 'fs.tar' to ustar archive on scratch device...
Timer: 55 ticks
Thread: 0 idle ticks, 53 kernel ticks, 2 user ticks
hdb1 (filesys): 91 reads, 4 writes
hda2 (scratch): 0 reads, 3 writes
Console: 852 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
Copying tests/filesys/extended/dir-under-file.tar out of /tmp/dyfHKlg1Q2.dsk...
rm -f tmp.dsk
perl -I../.. ../../tests/filesys/extended/dir-under-file.ck tests/filesys/extended/dir-under-file tests/filesys/extended/dir-under-file.result
FAIL tests/filesys/extended/dir-under-file
Test output failed to match any acceptable form.

Acceptable output:
  (dir-under-file) begin
  (dir-under-file) create "abc"
  (dir-under-file) mkdir "abc" (must return false)
  (dir-under-file) end
Differences in `diff -u' format:
  (dir-under-file) begin
  (dir-under-file) create "abc"
  (dir-under-file) mkdir "abc" (must return false)
- (dir-under-file) end

(Process exit codes are excluded for matching purposes.)
rm -f tmp.dsk
pintos-mkdisk tmp.dsk --filesys-size=2
pintos -v -k -T 150 --qemu  --disk=tmp.dsk -p tests/filesys/extended/dir-vine -a dir-vine -p tests/filesys/extended/tar -a tar -- -q    -f run dir-vine < /dev/null 2> tests/filesys/extended/dir-vine.errors |tee tests/filesys/extended/dir-vine.output
Copying tests/filesys/extended/dir-vine to scratch partition...
Copying tests/filesys/extended/tar to scratch partition...
qemu -hda /tmp/lOwxQPaV7j.dsk -hdb tmp.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run dir-vine
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 1,008 sectors (504 kB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 230 sectors (115 kB), Pintos scratch (22)
hdb: 5,040 sectors (2 MB), model "QM00002", serial "QEMU HARDDISK"
hdb1: 4,096 sectors (2 MB), Pintos file system (21)
filesys: using hdb1
scratch: using hda2
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'dir-vine' into the file system...
Putting 'tar' into the file system...
Erasing ustar archive...
Executing 'dir-vine':
(dir-vine) begin
(dir-vine) creating many levels of files and directories...
Execution of 'dir-vine' complete.
Timer: 86 ticks
Thread: 0 idle ticks, 85 kernel ticks, 1 user ticks
hdb1 (filesys): 85 reads, 466 writes
hda2 (scratch): 229 reads, 2 writes
Console: 1013 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
pintos -v -k -T 60  --qemu --disk=tmp.dsk -g fs.tar -a tests/filesys/extended/dir-vine.tar -- -q  run 'tar fs.tar /' < /dev/null 2> tests/filesys/extended/dir-vine-persistence.errors |tee tests/filesys/extended/dir-vine-persistence.output
qemu -hda /tmp/l7AyKD3522.dsk -hdb tmp.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q run 'tar fs.tar /' append fs.tar
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 3,024 sectors (1 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 2,048 sectors (1 MB), Pintos scratch (22)
hdb: 5,040 sectors (2 MB), model "QM00002", serial "QEMU HARDDISK"
hdb1: 4,096 sectors (2 MB), Pintos file system (21)
filesys: using hdb1
scratch: using hda2
Boot complete.
Executing 'tar fs.tar /':
/: open failed
error writing archive
tar: exit(1)
Execution of 'tar fs.tar /' complete.
Appending 'fs.tar' to ustar archive on scratch device...
Timer: 54 ticks
Thread: 0 idle ticks, 52 kernel ticks, 2 user ticks
hdb1 (filesys): 88 reads, 4 writes
hda2 (scratch): 0 reads, 3 writes
Console: 852 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
Copying tests/filesys/extended/dir-vine.tar out of /tmp/l7AyKD3522.dsk...
rm -f tmp.dsk
perl -I../.. ../../tests/filesys/extended/dir-vine.ck tests/filesys/extended/dir-vine tests/filesys/extended/dir-vine.result
FAIL tests/filesys/extended/dir-vine
Test output failed to match any acceptable form.

Acceptable output:
  (dir-vine) begin
  (dir-vine) creating many levels of files and directories...
  (dir-vine) removing all but top 10 levels of files and directories...
  (dir-vine) end
Differences in `diff -u' format:
  (dir-vine) begin
  (dir-vine) creating many levels of files and directories...
- (dir-vine) removing all but top 10 levels of files and directories...
- (dir-vine) end

(Process exit codes are excluded for matching purposes.)
rm -f tmp.dsk
pintos-mkdisk tmp.dsk --filesys-size=2
pintos -v -k -T 60 --qemu  --disk=tmp.dsk -p tests/filesys/extended/grow-create -a grow-create -p tests/filesys/extended/tar -a tar -- -q    -f run grow-create < /dev/null 2> tests/filesys/extended/grow-create.errors |tee tests/filesys/extended/grow-create.output
Copying tests/filesys/extended/grow-create to scratch partition...
Copying tests/filesys/extended/tar to scratch partition...
qemu -hda /tmp/cgczXoPTex.dsk -hdb tmp.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run grow-create
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 1,008 sectors (504 kB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 226 sectors (113 kB), Pintos scratch (22)
hdb: 5,040 sectors (2 MB), model "QM00002", serial "QEMU HARDDISK"
hdb1: 4,096 sectors (2 MB), Pintos file system (21)
filesys: using hdb1
scratch: using hda2
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'grow-create' into the file system...
Putting 'tar' into the file system...
Erasing ustar archive...
Executing 'grow-create':
(grow-create) begin
(grow-create) create "blargle"
(grow-create) open "blargle" for verification
(grow-create) verified contents of "blargle"
(grow-create) close "blargle"
(grow-create) end
grow-create: exit(0)
Execution of 'grow-create' complete.
Timer: 85 ticks
Thread: 0 idle ticks, 83 kernel ticks, 2 user ticks
hdb1 (filesys): 108 reads, 462 writes
hda2 (scratch): 225 reads, 2 writes
Console: 1160 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
pintos -v -k -T 60  --qemu --disk=tmp.dsk -g fs.tar -a tests/filesys/extended/grow-create.tar -- -q  run 'tar fs.tar /' < /dev/null 2> tests/filesys/extended/grow-create-persistence.errors |tee tests/filesys/extended/grow-create-persistence.output
qemu -hda /tmp/EydGjsgcO7.dsk -hdb tmp.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q run 'tar fs.tar /' append fs.tar
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 3,024 sectors (1 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 2,048 sectors (1 MB), Pintos scratch (22)
hdb: 5,040 sectors (2 MB), model "QM00002", serial "QEMU HARDDISK"
hdb1: 4,096 sectors (2 MB), Pintos file system (21)
filesys: using hdb1
scratch: using hda2
Boot complete.
Executing 'tar fs.tar /':
/: open failed
error writing archive
tar: exit(1)
Execution of 'tar fs.tar /' complete.
Appending 'fs.tar' to ustar archive on scratch device...
Timer: 55 ticks
Thread: 0 idle ticks, 52 kernel ticks, 3 user ticks
hdb1 (filesys): 91 reads, 4 writes
hda2 (scratch): 0 reads, 3 writes
Console: 852 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
Copying tests/filesys/extended/grow-create.tar out of /tmp/EydGjsgcO7.dsk...
rm -f tmp.dsk
perl -I../.. ../../tests/filesys/extended/grow-create.ck tests/filesys/extended/grow-create tests/filesys/extended/grow-create.result
pass tests/filesys/extended/grow-create
rm -f tmp.dsk
pintos-mkdisk tmp.dsk --filesys-size=2
pintos -v -k -T 60 --qemu  --disk=tmp.dsk -p tests/filesys/extended/grow-dir-lg -a grow-dir-lg -p tests/filesys/extended/tar -a tar -- -q    -f run grow-dir-lg < /dev/null 2> tests/filesys/extended/grow-dir-lg.errors |tee tests/filesys/extended/grow-dir-lg.output
Copying tests/filesys/extended/grow-dir-lg to scratch partition...
Copying tests/filesys/extended/tar to scratch partition...
qemu -hda /tmp/RsK73r0Sss.dsk -hdb tmp.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run grow-dir-lg
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 1,008 sectors (504 kB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 227 sectors (113 kB), Pintos scratch (22)
hdb: 5,040 sectors (2 MB), model "QM00002", serial "QEMU HARDDISK"
hdb1: 4,096 sectors (2 MB), Pintos file system (21)
filesys: using hdb1
scratch: using hda2
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'grow-dir-lg' into the file system...
Putting 'tar' into the file system...
Erasing ustar archive...
Executing 'grow-dir-lg':
(grow-dir-lg) begin
(grow-dir-lg) mkdir /x
Execution of 'grow-dir-lg' complete.
Timer: 83 ticks
Thread: 0 idle ticks, 83 kernel ticks, 1 user ticks
hdb1 (filesys): 83 reads, 460 writes
hda2 (scratch): 226 reads, 2 writes
Console: 991 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
pintos -v -k -T 60  --qemu --disk=tmp.dsk -g fs.tar -a tests/filesys/extended/grow-dir-lg.tar -- -q  run 'tar fs.tar /' < /dev/null 2> tests/filesys/extended/grow-dir-lg-persistence.errors |tee tests/filesys/extended/grow-dir-lg-persistence.output
qemu -hda /tmp/zqRj8dl3zg.dsk -hdb tmp.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q run 'tar fs.tar /' append fs.tar
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 3,024 sectors (1 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 2,048 sectors (1 MB), Pintos scratch (22)
hdb: 5,040 sectors (2 MB), model "QM00002", serial "QEMU HARDDISK"
hdb1: 4,096 sectors (2 MB), Pintos file system (21)
filesys: using hdb1
scratch: using hda2
Boot complete.
Executing 'tar fs.tar /':
/: open failed
error writing archive
tar: exit(1)
Execution of 'tar fs.tar /' complete.
Appending 'fs.tar' to ustar archive on scratch device...
Timer: 55 ticks
Thread: 0 idle ticks, 53 kernel ticks, 2 user ticks
hdb1 (filesys): 88 reads, 4 writes
hda2 (scratch): 0 reads, 3 writes
Console: 852 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
Copying tests/filesys/extended/grow-dir-lg.tar out of /tmp/zqRj8dl3zg.dsk...
rm -f tmp.dsk
perl -I../.. ../../tests/filesys/extended/grow-dir-lg.ck tests/filesys/extended/grow-dir-lg tests/filesys/extended/grow-dir-lg.result
FAIL tests/filesys/extended/grow-dir-lg
Test output failed to match any acceptable form.

Acceptable output:
  (grow-dir-lg) begin
  (grow-dir-lg) mkdir /x
  (grow-dir-lg) creating and checking "/x/file0"
  (grow-dir-lg) creating and checking "/x/file1"
  (grow-dir-lg) creating and checking "/x/file2"
  (grow-dir-lg) creating and checking "/x/file3"
  (grow-dir-lg) creating and checking "/x/file4"
  (grow-dir-lg) creating and checking "/x/file5"
  (grow-dir-lg) creating and checking "/x/file6"
  (grow-dir-lg) creating and checking "/x/file7"
  (grow-dir-lg) creating and checking "/x/file8"
  (grow-dir-lg) creating and checking "/x/file9"
  (grow-dir-lg) creating and checking "/x/file10"
  (grow-dir-lg) creating and checking "/x/file11"
  (grow-dir-lg) creating and checking "/x/file12"
  (grow-dir-lg) creating and checking "/x/file13"
  (grow-dir-lg) creating and checking "/x/file14"
  (grow-dir-lg) creating and checking "/x/file15"
  (grow-dir-lg) creating and checking "/x/file16"
  (grow-dir-lg) creating and checking "/x/file17"
  (grow-dir-lg) creating and checking "/x/file18"
  (grow-dir-lg) creating and checking "/x/file19"
  (grow-dir-lg) creating and checking "/x/file20"
  (grow-dir-lg) creating and checking "/x/file21"
  (grow-dir-lg) creating and checking "/x/file22"
  (grow-dir-lg) creating and checking "/x/file23"
  (grow-dir-lg) creating and checking "/x/file24"
  (grow-dir-lg) creating and checking "/x/file25"
  (grow-dir-lg) creating and checking "/x/file26"
  (grow-dir-lg) creating and checking "/x/file27"
  (grow-dir-lg) creating and checking "/x/file28"
  (grow-dir-lg) creating and checking "/x/file29"
  (grow-dir-lg) creating and checking "/x/file30"
  (grow-dir-lg) creating and checking "/x/file31"
  (grow-dir-lg) creating and checking "/x/file32"
  (grow-dir-lg) creating and checking "/x/file33"
  (grow-dir-lg) creating and checking "/x/file34"
  (grow-dir-lg) creating and checking "/x/file35"
  (grow-dir-lg) creating and checking "/x/file36"
  (grow-dir-lg) creating and checking "/x/file37"
  (grow-dir-lg) creating and checking "/x/file38"
  (grow-dir-lg) creating and checking "/x/file39"
  (grow-dir-lg) creating and checking "/x/file40"
  (grow-dir-lg) creating and checking "/x/file41"
  (grow-dir-lg) creating and checking "/x/file42"
  (grow-dir-lg) creating and checking "/x/file43"
  (grow-dir-lg) creating and checking "/x/file44"
  (grow-dir-lg) creating and checking "/x/file45"
  (grow-dir-lg) creating and checking "/x/file46"
  (grow-dir-lg) creating and checking "/x/file47"
  (grow-dir-lg) creating and checking "/x/file48"
  (grow-dir-lg) creating and checking "/x/file49"
  (grow-dir-lg) end
Differences in `diff -u' format:
  (grow-dir-lg) begin
  (grow-dir-lg) mkdir /x
- (grow-dir-lg) creating and checking "/x/file0"
- (grow-dir-lg) creating and checking "/x/file1"
- (grow-dir-lg) creating and checking "/x/file2"
- (grow-dir-lg) creating and checking "/x/file3"
- (grow-dir-lg) creating and checking "/x/file4"
- (grow-dir-lg) creating and checking "/x/file5"
- (grow-dir-lg) creating and checking "/x/file6"
- (grow-dir-lg) creating and checking "/x/file7"
- (grow-dir-lg) creating and checking "/x/file8"
- (grow-dir-lg) creating and checking "/x/file9"
- (grow-dir-lg) creating and checking "/x/file10"
- (grow-dir-lg) creating and checking "/x/file11"
- (grow-dir-lg) creating and checking "/x/file12"
- (grow-dir-lg) creating and checking "/x/file13"
- (grow-dir-lg) creating and checking "/x/file14"
- (grow-dir-lg) creating and checking "/x/file15"
- (grow-dir-lg) creating and checking "/x/file16"
- (grow-dir-lg) creating and checking "/x/file17"
- (grow-dir-lg) creating and checking "/x/file18"
- (grow-dir-lg) creating and checking "/x/file19"
- (grow-dir-lg) creating and checking "/x/file20"
- (grow-dir-lg) creating and checking "/x/file21"
- (grow-dir-lg) creating and checking "/x/file22"
- (grow-dir-lg) creating and checking "/x/file23"
- (grow-dir-lg) creating and checking "/x/file24"
- (grow-dir-lg) creating and checking "/x/file25"
- (grow-dir-lg) creating and checking "/x/file26"
- (grow-dir-lg) creating and checking "/x/file27"
- (grow-dir-lg) creating and checking "/x/file28"
- (grow-dir-lg) creating and checking "/x/file29"
- (grow-dir-lg) creating and checking "/x/file30"
- (grow-dir-lg) creating and checking "/x/file31"
- (grow-dir-lg) creating and checking "/x/file32"
- (grow-dir-lg) creating and checking "/x/file33"
- (grow-dir-lg) creating and checking "/x/file34"
- (grow-dir-lg) creating and checking "/x/file35"
- (grow-dir-lg) creating and checking "/x/file36"
- (grow-dir-lg) creating and checking "/x/file37"
- (grow-dir-lg) creating and checking "/x/file38"
- (grow-dir-lg) creating and checking "/x/file39"
- (grow-dir-lg) creating and checking "/x/file40"
- (grow-dir-lg) creating and checking "/x/file41"
- (grow-dir-lg) creating and checking "/x/file42"
- (grow-dir-lg) creating and checking "/x/file43"
- (grow-dir-lg) creating and checking "/x/file44"
- (grow-dir-lg) creating and checking "/x/file45"
- (grow-dir-lg) creating and checking "/x/file46"
- (grow-dir-lg) creating and checking "/x/file47"
- (grow-dir-lg) creating and checking "/x/file48"
- (grow-dir-lg) creating and checking "/x/file49"
- (grow-dir-lg) end

(Process exit codes are excluded for matching purposes.)
rm -f tmp.dsk
pintos-mkdisk tmp.dsk --filesys-size=2
pintos -v -k -T 60 --qemu  --disk=tmp.dsk -p tests/filesys/extended/grow-file-size -a grow-file-size -p tests/filesys/extended/tar -a tar -- -q    -f run grow-file-size < /dev/null 2> tests/filesys/extended/grow-file-size.errors |tee tests/filesys/extended/grow-file-size.output
Copying tests/filesys/extended/grow-file-size to scratch partition...
Copying tests/filesys/extended/tar to scratch partition...
qemu -hda /tmp/pwQ2mF0izw.dsk -hdb tmp.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run grow-file-size
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 1,008 sectors (504 kB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 227 sectors (113 kB), Pintos scratch (22)
hdb: 5,040 sectors (2 MB), model "QM00002", serial "QEMU HARDDISK"
hdb1: 4,096 sectors (2 MB), Pintos file system (21)
filesys: using hdb1
scratch: using hda2
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'grow-file-size' into the file system...
Putting 'tar' into the file system...
Erasing ustar archive...
Executing 'grow-file-size':
(grow-file-size) begin
(grow-file-size) create "testfile"
(grow-file-size) open "testfile"
(grow-file-size) writing "testfile"
(grow-file-size) write 37 bytes at offset 0 in "testfile" failed: FAILED
grow-file-size: exit(1)
Execution of 'grow-file-size' complete.
Timer: 87 ticks
Thread: 0 idle ticks, 85 kernel ticks, 3 user ticks
hdb1 (filesys): 108 reads, 464 writes
hda2 (scratch): 226 reads, 2 writes
Console: 1185 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
pintos -v -k -T 60  --qemu --disk=tmp.dsk -g fs.tar -a tests/filesys/extended/grow-file-size.tar -- -q  run 'tar fs.tar /' < /dev/null 2> tests/filesys/extended/grow-file-size-persistence.errors |tee tests/filesys/extended/grow-file-size-persistence.output
qemu -hda /tmp/AaH3SI2F3D.dsk -hdb tmp.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q run 'tar fs.tar /' append fs.tar
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 3,024 sectors (1 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 2,048 sectors (1 MB), Pintos scratch (22)
hdb: 5,040 sectors (2 MB), model "QM00002", serial "QEMU HARDDISK"
hdb1: 4,096 sectors (2 MB), Pintos file system (21)
filesys: using hdb1
scratch: using hda2
Boot complete.
Executing 'tar fs.tar /':
/: open failed
error writing archive
tar: exit(1)
Execution of 'tar fs.tar /' complete.
Appending 'fs.tar' to ustar archive on scratch device...
Timer: 54 ticks
Thread: 0 idle ticks, 52 kernel ticks, 2 user ticks
hdb1 (filesys): 91 reads, 4 writes
hda2 (scratch): 0 reads, 3 writes
Console: 852 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
Copying tests/filesys/extended/grow-file-size.tar out of /tmp/AaH3SI2F3D.dsk...
rm -f tmp.dsk
perl -I../.. ../../tests/filesys/extended/grow-file-size.ck tests/filesys/extended/grow-file-size tests/filesys/extended/grow-file-size.result
FAIL tests/filesys/extended/grow-file-size
run: write 37 bytes at offset 0 in "testfile" failed: FAILED
rm -f tmp.dsk
pintos-mkdisk tmp.dsk --filesys-size=2
pintos -v -k -T 60 --qemu  --disk=tmp.dsk -p tests/filesys/extended/grow-root-lg -a grow-root-lg -p tests/filesys/extended/tar -a tar -- -q    -f run grow-root-lg < /dev/null 2> tests/filesys/extended/grow-root-lg.errors |tee tests/filesys/extended/grow-root-lg.output
Copying tests/filesys/extended/grow-root-lg to scratch partition...
Copying tests/filesys/extended/tar to scratch partition...
qemu -hda /tmp/Fu9We_afCt.dsk -hdb tmp.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run grow-root-lg
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 1,008 sectors (504 kB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 227 sectors (113 kB), Pintos scratch (22)
hdb: 5,040 sectors (2 MB), model "QM00002", serial "QEMU HARDDISK"
hdb1: 4,096 sectors (2 MB), Pintos file system (21)
filesys: using hdb1
scratch: using hda2
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'grow-root-lg' into the file system...
Putting 'tar' into the file system...
Erasing ustar archive...
Executing 'grow-root-lg':
(grow-root-lg) begin
(grow-root-lg) creating and checking "file0"
(grow-root-lg) creating and checking "file1"
(grow-root-lg) creating and checking "file2"
(grow-root-lg) creating and checking "file3"
(grow-root-lg) creating and checking "file4"
(grow-root-lg) creating and checking "file5"
(grow-root-lg) creating and checking "file6"
(grow-root-lg) creating and checking "file7"
(grow-root-lg) creating and checking "file8"
(grow-root-lg) creating and checking "file9"
(grow-root-lg) creating and checking "file10"
(grow-root-lg) creating and checking "file11"
(grow-root-lg) creating and checking "file12"
(grow-root-lg) creating and checking "file13"
(grow-root-lg) creating and checking "file14"
(grow-root-lg) create "file14": FAILED
grow-root-lg: exit(1)
Execution of 'grow-root-lg' complete.
Timer: 115 ticks
Thread: 0 idle ticks, 82 kernel ticks, 33 user ticks
hdb1 (filesys): 836 reads, 549 writes
hda2 (scratch): 226 reads, 2 writes
Console: 1717 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
pintos -v -k -T 60  --qemu --disk=tmp.dsk -g fs.tar -a tests/filesys/extended/grow-root-lg.tar -- -q  run 'tar fs.tar /' < /dev/null 2> tests/filesys/extended/grow-root-lg-persistence.errors |tee tests/filesys/extended/grow-root-lg-persistence.output
qemu -hda /tmp/UN4QwZ47Va.dsk -hdb tmp.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q run 'tar fs.tar /' append fs.tar
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 3,024 sectors (1 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 2,048 sectors (1 MB), Pintos scratch (22)
hdb: 5,040 sectors (2 MB), model "QM00002", serial "QEMU HARDDISK"
hdb1: 4,096 sectors (2 MB), Pintos file system (21)
filesys: using hdb1
scratch: using hda2
Boot complete.
Executing 'tar fs.tar /':
fs.tar: create failed
tar: exit(1)
Execution of 'tar fs.tar /' complete.
Appending 'fs.tar' to ustar archive on scratch device...
Kernel PANIC at ../../filesys/fsutil.c:187 in fsutil_append(): fs.tar: open failed
Call stack: 0xc00285ac 0xc002dd6e 0xc002092f.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 53 ticks
Thread: 0 idle ticks, 52 kernel ticks, 1 user ticks
hdb1 (filesys): 90 reads, 4 writes
hda2 (scratch): 0 reads, 0 writes
Console: 1120 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
Copying tests/filesys/extended/grow-root-lg.tar out of /tmp/UN4QwZ47Va.dsk...
rm -f tmp.dsk
perl -I../.. ../../tests/filesys/extended/grow-root-lg.ck tests/filesys/extended/grow-root-lg tests/filesys/extended/grow-root-lg.result
FAIL tests/filesys/extended/grow-root-lg
run: create "file14": FAILED
rm -f tmp.dsk
pintos-mkdisk tmp.dsk --filesys-size=2
pintos -v -k -T 60 --qemu  --disk=tmp.dsk -p tests/filesys/extended/grow-root-sm -a grow-root-sm -p tests/filesys/extended/tar -a tar -- -q    -f run grow-root-sm < /dev/null 2> tests/filesys/extended/grow-root-sm.errors |tee tests/filesys/extended/grow-root-sm.output
Copying tests/filesys/extended/grow-root-sm to scratch partition...
Copying tests/filesys/extended/tar to scratch partition...
qemu -hda /tmp/WpwbXodeZA.dsk -hdb tmp.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run grow-root-sm
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 1,008 sectors (504 kB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 227 sectors (113 kB), Pintos scratch (22)
hdb: 5,040 sectors (2 MB), model "QM00002", serial "QEMU HARDDISK"
hdb1: 4,096 sectors (2 MB), Pintos file system (21)
filesys: using hdb1
scratch: using hda2
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'grow-root-sm' into the file system...
Putting 'tar' into the file system...
Erasing ustar archive...
Executing 'grow-root-sm':
(grow-root-sm) begin
(grow-root-sm) creating and checking "file0"
(grow-root-sm) creating and checking "file1"
(grow-root-sm) creating and checking "file2"
(grow-root-sm) creating and checking "file3"
(grow-root-sm) creating and checking "file4"
(grow-root-sm) creating and checking "file5"
(grow-root-sm) creating and checking "file6"
(grow-root-sm) creating and checking "file7"
(grow-root-sm) creating and checking "file8"
(grow-root-sm) creating and checking "file9"
(grow-root-sm) creating and checking "file10"
(grow-root-sm) creating and checking "file11"
(grow-root-sm) creating and checking "file12"
(grow-root-sm) creating and checking "file13"
(grow-root-sm) creating and checking "file14"
(grow-root-sm) create "file14": FAILED
grow-root-sm: exit(1)
Execution of 'grow-root-sm' complete.
Timer: 120 ticks
Thread: 0 idle ticks, 84 kernel ticks, 36 user ticks
hdb1 (filesys): 836 reads, 549 writes
hda2 (scratch): 226 reads, 2 writes
Console: 1717 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
pintos -v -k -T 60  --qemu --disk=tmp.dsk -g fs.tar -a tests/filesys/extended/grow-root-sm.tar -- -q  run 'tar fs.tar /' < /dev/null 2> tests/filesys/extended/grow-root-sm-persistence.errors |tee tests/filesys/extended/grow-root-sm-persistence.output
qemu -hda /tmp/QvH_1e2j_O.dsk -hdb tmp.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q run 'tar fs.tar /' append fs.tar
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 3,024 sectors (1 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 2,048 sectors (1 MB), Pintos scratch (22)
hdb: 5,040 sectors (2 MB), model "QM00002", serial "QEMU HARDDISK"
hdb1: 4,096 sectors (2 MB), Pintos file system (21)
filesys: using hdb1
scratch: using hda2
Boot complete.
Executing 'tar fs.tar /':
fs.tar: create failed
tar: exit(1)
Execution of 'tar fs.tar /' complete.
Appending 'fs.tar' to ustar archive on scratch device...
Kernel PANIC at ../../filesys/fsutil.c:187 in fsutil_append(): fs.tar: open failed
Call stack: 0xc00285ac 0xc002dd6e 0xc002092f.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 53 ticks
Thread: 0 idle ticks, 52 kernel ticks, 1 user ticks
hdb1 (filesys): 90 reads, 4 writes
hda2 (scratch): 0 reads, 0 writes
Console: 1120 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
Copying tests/filesys/extended/grow-root-sm.tar out of /tmp/QvH_1e2j_O.dsk...
rm -f tmp.dsk
perl -I../.. ../../tests/filesys/extended/grow-root-sm.ck tests/filesys/extended/grow-root-sm tests/filesys/extended/grow-root-sm.result
FAIL tests/filesys/extended/grow-root-sm
run: create "file14": FAILED
rm -f tmp.dsk
pintos-mkdisk tmp.dsk --filesys-size=2
pintos -v -k -T 60 --qemu  --disk=tmp.dsk -p tests/filesys/extended/grow-seq-lg -a grow-seq-lg -p tests/filesys/extended/tar -a tar -- -q    -f run grow-seq-lg < /dev/null 2> tests/filesys/extended/grow-seq-lg.errors |tee tests/filesys/extended/grow-seq-lg.output
Copying tests/filesys/extended/grow-seq-lg to scratch partition...
Copying tests/filesys/extended/tar to scratch partition...
qemu -hda /tmp/eRQWMF2I2L.dsk -hdb tmp.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run grow-seq-lg
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 1,008 sectors (504 kB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 226 sectors (113 kB), Pintos scratch (22)
hdb: 5,040 sectors (2 MB), model "QM00002", serial "QEMU HARDDISK"
hdb1: 4,096 sectors (2 MB), Pintos file system (21)
filesys: using hdb1
scratch: using hda2
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'grow-seq-lg' into the file system...
Putting 'tar' into the file system...
Erasing ustar archive...
Executing 'grow-seq-lg':
(grow-seq-lg) begin
(grow-seq-lg) create "testme"
(grow-seq-lg) open "testme"
(grow-seq-lg) writing "testme"
(grow-seq-lg) write 1234 bytes at offset 0 in "testme" failed: FAILED
grow-seq-lg: exit(1)
Execution of 'grow-seq-lg' complete.
Timer: 86 ticks
Thread: 0 idle ticks, 83 kernel ticks, 3 user ticks
hdb1 (filesys): 108 reads, 462 writes
hda2 (scratch): 225 reads, 2 writes
Console: 1149 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
pintos -v -k -T 60  --qemu --disk=tmp.dsk -g fs.tar -a tests/filesys/extended/grow-seq-lg.tar -- -q  run 'tar fs.tar /' < /dev/null 2> tests/filesys/extended/grow-seq-lg-persistence.errors |tee tests/filesys/extended/grow-seq-lg-persistence.output
qemu -hda /tmp/Pwvsv4P2w4.dsk -hdb tmp.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q run 'tar fs.tar /' append fs.tar
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 3,024 sectors (1 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 2,048 sectors (1 MB), Pintos scratch (22)
hdb: 5,040 sectors (2 MB), model "QM00002", serial "QEMU HARDDISK"
hdb1: 4,096 sectors (2 MB), Pintos file system (21)
filesys: using hdb1
scratch: using hda2
Boot complete.
Executing 'tar fs.tar /':
/: open failed
error writing archive
tar: exit(1)
Execution of 'tar fs.tar /' complete.
Appending 'fs.tar' to ustar archive on scratch device...
Timer: 54 ticks
Thread: 0 idle ticks, 52 kernel ticks, 2 user ticks
hdb1 (filesys): 91 reads, 4 writes
hda2 (scratch): 0 reads, 3 writes
Console: 852 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
Copying tests/filesys/extended/grow-seq-lg.tar out of /tmp/Pwvsv4P2w4.dsk...
rm -f tmp.dsk
perl -I../.. ../../tests/filesys/extended/grow-seq-lg.ck tests/filesys/extended/grow-seq-lg tests/filesys/extended/grow-seq-lg.result
FAIL tests/filesys/extended/grow-seq-lg
run: write 1234 bytes at offset 0 in "testme" failed: FAILED
rm -f tmp.dsk
pintos-mkdisk tmp.dsk --filesys-size=2
pintos -v -k -T 60 --qemu  --disk=tmp.dsk -p tests/filesys/extended/grow-seq-sm -a grow-seq-sm -p tests/filesys/extended/tar -a tar -- -q    -f run grow-seq-sm < /dev/null 2> tests/filesys/extended/grow-seq-sm.errors |tee tests/filesys/extended/grow-seq-sm.output
Copying tests/filesys/extended/grow-seq-sm to scratch partition...
Copying tests/filesys/extended/tar to scratch partition...
qemu -hda /tmp/g79AY2qgZa.dsk -hdb tmp.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run grow-seq-sm
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 1,008 sectors (504 kB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 226 sectors (113 kB), Pintos scratch (22)
hdb: 5,040 sectors (2 MB), model "QM00002", serial "QEMU HARDDISK"
hdb1: 4,096 sectors (2 MB), Pintos file system (21)
filesys: using hdb1
scratch: using hda2
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'grow-seq-sm' into the file system...
Putting 'tar' into the file system...
Erasing ustar archive...
Executing 'grow-seq-sm':
(grow-seq-sm) begin
(grow-seq-sm) create "testme"
(grow-seq-sm) open "testme"
(grow-seq-sm) writing "testme"
(grow-seq-sm) write 1234 bytes at offset 0 in "testme" failed: FAILED
grow-seq-sm: exit(1)
Execution of 'grow-seq-sm' complete.
Timer: 85 ticks
Thread: 0 idle ticks, 83 kernel ticks, 2 user ticks
hdb1 (filesys): 108 reads, 462 writes
hda2 (scratch): 225 reads, 2 writes
Console: 1149 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
pintos -v -k -T 60  --qemu --disk=tmp.dsk -g fs.tar -a tests/filesys/extended/grow-seq-sm.tar -- -q  run 'tar fs.tar /' < /dev/null 2> tests/filesys/extended/grow-seq-sm-persistence.errors |tee tests/filesys/extended/grow-seq-sm-persistence.output
qemu -hda /tmp/ajLiuWwgIq.dsk -hdb tmp.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q run 'tar fs.tar /' append fs.tar
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 3,024 sectors (1 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 2,048 sectors (1 MB), Pintos scratch (22)
hdb: 5,040 sectors (2 MB), model "QM00002", serial "QEMU HARDDISK"
hdb1: 4,096 sectors (2 MB), Pintos file system (21)
filesys: using hdb1
scratch: using hda2
Boot complete.
Executing 'tar fs.tar /':
/: open failed
error writing archive
tar: exit(1)
Execution of 'tar fs.tar /' complete.
Appending 'fs.tar' to ustar archive on scratch device...
Timer: 55 ticks
Thread: 0 idle ticks, 53 kernel ticks, 2 user ticks
hdb1 (filesys): 91 reads, 4 writes
hda2 (scratch): 0 reads, 3 writes
Console: 852 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
Copying tests/filesys/extended/grow-seq-sm.tar out of /tmp/ajLiuWwgIq.dsk...
rm -f tmp.dsk
perl -I../.. ../../tests/filesys/extended/grow-seq-sm.ck tests/filesys/extended/grow-seq-sm tests/filesys/extended/grow-seq-sm.result
FAIL tests/filesys/extended/grow-seq-sm
run: write 1234 bytes at offset 0 in "testme" failed: FAILED
rm -f tmp.dsk
pintos-mkdisk tmp.dsk --filesys-size=2
pintos -v -k -T 60 --qemu  --disk=tmp.dsk -p tests/filesys/extended/grow-sparse -a grow-sparse -p tests/filesys/extended/tar -a tar -- -q    -f run grow-sparse < /dev/null 2> tests/filesys/extended/grow-sparse.errors |tee tests/filesys/extended/grow-sparse.output
Copying tests/filesys/extended/grow-sparse to scratch partition...
Copying tests/filesys/extended/tar to scratch partition...
qemu -hda /tmp/9SaGwC5tUb.dsk -hdb tmp.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run grow-sparse
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 1,008 sectors (504 kB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 226 sectors (113 kB), Pintos scratch (22)
hdb: 5,040 sectors (2 MB), model "QM00002", serial "QEMU HARDDISK"
hdb1: 4,096 sectors (2 MB), Pintos file system (21)
filesys: using hdb1
scratch: using hda2
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'grow-sparse' into the file system...
Putting 'tar' into the file system...
Erasing ustar archive...
Executing 'grow-sparse':
(grow-sparse) begin
(grow-sparse) create "testfile"
(grow-sparse) open "testfile"
(grow-sparse) seek "testfile"
(grow-sparse) write "testfile"
(grow-sparse) write "testfile": FAILED
grow-sparse: exit(1)
Execution of 'grow-sparse' complete.
Timer: 86 ticks
Thread: 0 idle ticks, 83 kernel ticks, 3 user ticks
hdb1 (filesys): 109 reads, 462 writes
hda2 (scratch): 225 reads, 2 writes
Console: 1152 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
pintos -v -k -T 60  --qemu --disk=tmp.dsk -g fs.tar -a tests/filesys/extended/grow-sparse.tar -- -q  run 'tar fs.tar /' < /dev/null 2> tests/filesys/extended/grow-sparse-persistence.errors |tee tests/filesys/extended/grow-sparse-persistence.output
qemu -hda /tmp/dkS_GPdGBc.dsk -hdb tmp.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q run 'tar fs.tar /' append fs.tar
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 3,024 sectors (1 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 2,048 sectors (1 MB), Pintos scratch (22)
hdb: 5,040 sectors (2 MB), model "QM00002", serial "QEMU HARDDISK"
hdb1: 4,096 sectors (2 MB), Pintos file system (21)
filesys: using hdb1
scratch: using hda2
Boot complete.
Executing 'tar fs.tar /':
/: open failed
error writing archive
tar: exit(1)
Execution of 'tar fs.tar /' complete.
Appending 'fs.tar' to ustar archive on scratch device...
Timer: 54 ticks
Thread: 0 idle ticks, 52 kernel ticks, 2 user ticks
hdb1 (filesys): 91 reads, 4 writes
hda2 (scratch): 0 reads, 3 writes
Console: 852 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
Copying tests/filesys/extended/grow-sparse.tar out of /tmp/dkS_GPdGBc.dsk...
rm -f tmp.dsk
perl -I../.. ../../tests/filesys/extended/grow-sparse.ck tests/filesys/extended/grow-sparse tests/filesys/extended/grow-sparse.result
FAIL tests/filesys/extended/grow-sparse
run: write "testfile": FAILED
rm -f tmp.dsk
pintos-mkdisk tmp.dsk --filesys-size=2
pintos -v -k -T 60 --qemu  --disk=tmp.dsk -p tests/filesys/extended/grow-tell -a grow-tell -p tests/filesys/extended/tar -a tar -- -q    -f run grow-tell < /dev/null 2> tests/filesys/extended/grow-tell.errors |tee tests/filesys/extended/grow-tell.output
Copying tests/filesys/extended/grow-tell to scratch partition...
Copying tests/filesys/extended/tar to scratch partition...
qemu -hda /tmp/QDI7pS4rV6.dsk -hdb tmp.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run grow-tell
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 1,008 sectors (504 kB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 227 sectors (113 kB), Pintos scratch (22)
hdb: 5,040 sectors (2 MB), model "QM00002", serial "QEMU HARDDISK"
hdb1: 4,096 sectors (2 MB), Pintos file system (21)
filesys: using hdb1
scratch: using hda2
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'grow-tell' into the file system...
Putting 'tar' into the file system...
Erasing ustar archive...
Executing 'grow-tell':
(grow-tell) begin
(grow-tell) create "foobar"
(grow-tell) open "foobar"
(grow-tell) writing "foobar"
(grow-tell) write 37 bytes at offset 0 in "foobar" failed: FAILED
grow-tell: exit(1)
Execution of 'grow-tell' complete.
Timer: 84 ticks
Thread: 0 idle ticks, 82 kernel ticks, 2 user ticks
hdb1 (filesys): 108 reads, 464 writes
hda2 (scratch): 226 reads, 2 writes
Console: 1127 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
pintos -v -k -T 60  --qemu --disk=tmp.dsk -g fs.tar -a tests/filesys/extended/grow-tell.tar -- -q  run 'tar fs.tar /' < /dev/null 2> tests/filesys/extended/grow-tell-persistence.errors |tee tests/filesys/extended/grow-tell-persistence.output
qemu -hda /tmp/yI8zXYYyCe.dsk -hdb tmp.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q run 'tar fs.tar /' append fs.tar
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 3,024 sectors (1 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 2,048 sectors (1 MB), Pintos scratch (22)
hdb: 5,040 sectors (2 MB), model "QM00002", serial "QEMU HARDDISK"
hdb1: 4,096 sectors (2 MB), Pintos file system (21)
filesys: using hdb1
scratch: using hda2
Boot complete.
Executing 'tar fs.tar /':
/: open failed
error writing archive
tar: exit(1)
Execution of 'tar fs.tar /' complete.
Appending 'fs.tar' to ustar archive on scratch device...
Timer: 55 ticks
Thread: 0 idle ticks, 53 kernel ticks, 2 user ticks
hdb1 (filesys): 91 reads, 4 writes
hda2 (scratch): 0 reads, 3 writes
Console: 852 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
Copying tests/filesys/extended/grow-tell.tar out of /tmp/yI8zXYYyCe.dsk...
rm -f tmp.dsk
perl -I../.. ../../tests/filesys/extended/grow-tell.ck tests/filesys/extended/grow-tell tests/filesys/extended/grow-tell.result
FAIL tests/filesys/extended/grow-tell
run: write 37 bytes at offset 0 in "foobar" failed: FAILED
rm -f tmp.dsk
pintos-mkdisk tmp.dsk --filesys-size=2
pintos -v -k -T 60 --qemu  --disk=tmp.dsk -p tests/filesys/extended/grow-two-files -a grow-two-files -p tests/filesys/extended/tar -a tar -- -q    -f run grow-two-files < /dev/null 2> tests/filesys/extended/grow-two-files.errors |tee tests/filesys/extended/grow-two-files.output
Copying tests/filesys/extended/grow-two-files to scratch partition...
Copying tests/filesys/extended/tar to scratch partition...
qemu -hda /tmp/5fiOQWHvhH.dsk -hdb tmp.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run grow-two-files
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 1,008 sectors (504 kB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 229 sectors (114 kB), Pintos scratch (22)
hdb: 5,040 sectors (2 MB), model "QM00002", serial "QEMU HARDDISK"
hdb1: 4,096 sectors (2 MB), Pintos file system (21)
filesys: using hdb1
scratch: using hda2
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'grow-two-files' into the file system...
Putting 'tar' into the file system...
Erasing ustar archive...
Executing 'grow-two-files':
(grow-two-files) begin
(grow-two-files) create "a"
(grow-two-files) create "b"
(grow-two-files) open "a"
(grow-two-files) open "b"
(grow-two-files) write "a" and "b" alternately
(grow-two-files) write 250 bytes at offset 0 in "a" returned 0: FAILED
grow-two-files: exit(1)
Execution of 'grow-two-files' complete.
Timer: 88 ticks
Thread: 0 idle ticks, 84 kernel ticks, 4 user ticks
hdb1 (filesys): 138 reads, 472 writes
hda2 (scratch): 228 reads, 2 writes
Console: 1234 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
pintos -v -k -T 60  --qemu --disk=tmp.dsk -g fs.tar -a tests/filesys/extended/grow-two-files.tar -- -q  run 'tar fs.tar /' < /dev/null 2> tests/filesys/extended/grow-two-files-persistence.errors |tee tests/filesys/extended/grow-two-files-persistence.output
qemu -hda /tmp/5Mi88EpUrw.dsk -hdb tmp.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q run 'tar fs.tar /' append fs.tar
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 3,024 sectors (1 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 2,048 sectors (1 MB), Pintos scratch (22)
hdb: 5,040 sectors (2 MB), model "QM00002", serial "QEMU HARDDISK"
hdb1: 4,096 sectors (2 MB), Pintos file system (21)
filesys: using hdb1
scratch: using hda2
Boot complete.
Executing 'tar fs.tar /':
/: open failed
error writing archive
tar: exit(1)
Execution of 'tar fs.tar /' complete.
Appending 'fs.tar' to ustar archive on scratch device...
Timer: 55 ticks
Thread: 0 idle ticks, 54 kernel ticks, 2 user ticks
hdb1 (filesys): 94 reads, 4 writes
hda2 (scratch): 0 reads, 3 writes
Console: 852 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
Copying tests/filesys/extended/grow-two-files.tar out of /tmp/5Mi88EpUrw.dsk...
rm -f tmp.dsk
perl -I../.. ../../tests/filesys/extended/grow-two-files.ck tests/filesys/extended/grow-two-files tests/filesys/extended/grow-two-files.result
FAIL tests/filesys/extended/grow-two-files
run: write 250 bytes at offset 0 in "a" returned 0: FAILED
rm -f tmp.dsk
pintos-mkdisk tmp.dsk --filesys-size=2
pintos -v -k -T 60 --qemu  --disk=tmp.dsk -p tests/filesys/extended/syn-rw -a syn-rw -p tests/filesys/extended/tar -a tar -p tests/filesys/extended/child-syn-rw -a child-syn-rw -- -q    -f run syn-rw < /dev/null 2> tests/filesys/extended/syn-rw.errors |tee tests/filesys/extended/syn-rw.output
Copying tests/filesys/extended/syn-rw to scratch partition...
Copying tests/filesys/extended/tar to scratch partition...
Copying tests/filesys/extended/child-syn-rw to scratch partition...
qemu -hda /tmp/ramAzo1oCK.dsk -hdb tmp.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run syn-rw
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 1,008 sectors (504 kB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 342 sectors (171 kB), Pintos scratch (22)
hdb: 5,040 sectors (2 MB), model "QM00002", serial "QEMU HARDDISK"
hdb1: 4,096 sectors (2 MB), Pintos file system (21)
filesys: using hdb1
scratch: using hda2
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'syn-rw' into the file system...
Putting 'tar' into the file system...
Putting 'child-syn-rw' into the file system...
Erasing ustar archive...
Executing 'syn-rw':
(syn-rw) begin
(syn-rw) create "logfile"
(syn-rw) open "logfile"
(syn-rw) exec child 1 of 4: "child-syn-rw 0"
(syn-rw) exec child 2 of 4: "child-syn-rw 1"
(syn-rw) exec child 3 of 4: "child-syn-rw 2"
(syn-rw) exec child 4 of 4: "child-syn-rw 3"
(syn-rw) write 8 bytes at offset 0 in "logfile": FAILED
syn-rw: exit(1)
Execution of 'syn-rw' complete.
Timer: 217 ticks
Thread: 0 idle ticks, 99 kernel ticks, 118 user ticks
hdb1 (filesys): 224 reads, 696 writes
hda2 (scratch): 341 reads, 2 writes
Console: 1296 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
pintos -v -k -T 60  --qemu --disk=tmp.dsk -g fs.tar -a tests/filesys/extended/syn-rw.tar -- -q  run 'tar fs.tar /' < /dev/null 2> tests/filesys/extended/syn-rw-persistence.errors |tee tests/filesys/extended/syn-rw-persistence.output
qemu -hda /tmp/0Fpn_lGOSn.dsk -hdb tmp.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q run 'tar fs.tar /' append fs.tar
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 3,024 sectors (1 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 2,048 sectors (1 MB), Pintos scratch (22)
hdb: 5,040 sectors (2 MB), model "QM00002", serial "QEMU HARDDISK"
hdb1: 4,096 sectors (2 MB), Pintos file system (21)
filesys: using hdb1
scratch: using hda2
Boot complete.
Executing 'tar fs.tar /':
/: open failed
error writing archive
tar: exit(1)
Execution of 'tar fs.tar /' complete.
Appending 'fs.tar' to ustar archive on scratch device...
Timer: 55 ticks
Thread: 0 idle ticks, 53 kernel ticks, 2 user ticks
hdb1 (filesys): 94 reads, 4 writes
hda2 (scratch): 0 reads, 3 writes
Console: 852 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
Copying tests/filesys/extended/syn-rw.tar out of /tmp/0Fpn_lGOSn.dsk...
rm -f tmp.dsk
perl -I../.. ../../tests/filesys/extended/syn-rw.ck tests/filesys/extended/syn-rw tests/filesys/extended/syn-rw.result
FAIL tests/filesys/extended/syn-rw
run: write 8 bytes at offset 0 in "logfile": FAILED
perl -I../.. ../../tests/filesys/extended/dir-empty-name-persistence.ck tests/filesys/extended/dir-empty-name-persistence tests/filesys/extended/dir-empty-name-persistence.result
FAIL tests/filesys/extended/dir-empty-name-persistence
Prerequisite test tests/filesys/extended/dir-empty-name failed.
perl -I../.. ../../tests/filesys/extended/dir-mk-tree-persistence.ck tests/filesys/extended/dir-mk-tree-persistence tests/filesys/extended/dir-mk-tree-persistence.result
FAIL tests/filesys/extended/dir-mk-tree-persistence
Prerequisite test tests/filesys/extended/dir-mk-tree failed.
perl -I../.. ../../tests/filesys/extended/dir-mkdir-persistence.ck tests/filesys/extended/dir-mkdir-persistence tests/filesys/extended/dir-mkdir-persistence.result
FAIL tests/filesys/extended/dir-mkdir-persistence
Prerequisite test tests/filesys/extended/dir-mkdir failed.
perl -I../.. ../../tests/filesys/extended/dir-open-persistence.ck tests/filesys/extended/dir-open-persistence tests/filesys/extended/dir-open-persistence.result
FAIL tests/filesys/extended/dir-open-persistence
Prerequisite test tests/filesys/extended/dir-open failed.
perl -I../.. ../../tests/filesys/extended/dir-over-file-persistence.ck tests/filesys/extended/dir-over-file-persistence tests/filesys/extended/dir-over-file-persistence.result
FAIL tests/filesys/extended/dir-over-file-persistence
Prerequisite test tests/filesys/extended/dir-over-file failed.
perl -I../.. ../../tests/filesys/extended/dir-rm-cwd-persistence.ck tests/filesys/extended/dir-rm-cwd-persistence tests/filesys/extended/dir-rm-cwd-persistence.result
FAIL tests/filesys/extended/dir-rm-cwd-persistence
Prerequisite test tests/filesys/extended/dir-rm-cwd failed.
perl -I../.. ../../tests/filesys/extended/dir-rm-parent-persistence.ck tests/filesys/extended/dir-rm-parent-persistence tests/filesys/extended/dir-rm-parent-persistence.result
FAIL tests/filesys/extended/dir-rm-parent-persistence
Prerequisite test tests/filesys/extended/dir-rm-parent failed.
perl -I../.. ../../tests/filesys/extended/dir-rm-root-persistence.ck tests/filesys/extended/dir-rm-root-persistence tests/filesys/extended/dir-rm-root-persistence.result
FAIL tests/filesys/extended/dir-rm-root-persistence
Error extracting file system:
/: open failed
error writing archive
perl -I../.. ../../tests/filesys/extended/dir-rm-tree-persistence.ck tests/filesys/extended/dir-rm-tree-persistence tests/filesys/extended/dir-rm-tree-persistence.result
FAIL tests/filesys/extended/dir-rm-tree-persistence
Prerequisite test tests/filesys/extended/dir-rm-tree failed.
perl -I../.. ../../tests/filesys/extended/dir-rmdir-persistence.ck tests/filesys/extended/dir-rmdir-persistence tests/filesys/extended/dir-rmdir-persistence.result
FAIL tests/filesys/extended/dir-rmdir-persistence
Prerequisite test tests/filesys/extended/dir-rmdir failed.
perl -I../.. ../../tests/filesys/extended/dir-under-file-persistence.ck tests/filesys/extended/dir-under-file-persistence tests/filesys/extended/dir-under-file-persistence.result
FAIL tests/filesys/extended/dir-under-file-persistence
Prerequisite test tests/filesys/extended/dir-under-file failed.
perl -I../.. ../../tests/filesys/extended/dir-vine-persistence.ck tests/filesys/extended/dir-vine-persistence tests/filesys/extended/dir-vine-persistence.result
FAIL tests/filesys/extended/dir-vine-persistence
Prerequisite test tests/filesys/extended/dir-vine failed.
perl -I../.. ../../tests/filesys/extended/grow-create-persistence.ck tests/filesys/extended/grow-create-persistence tests/filesys/extended/grow-create-persistence.result
FAIL tests/filesys/extended/grow-create-persistence
Error extracting file system:
/: open failed
error writing archive
perl -I../.. ../../tests/filesys/extended/grow-dir-lg-persistence.ck tests/filesys/extended/grow-dir-lg-persistence tests/filesys/extended/grow-dir-lg-persistence.result
FAIL tests/filesys/extended/grow-dir-lg-persistence
Prerequisite test tests/filesys/extended/grow-dir-lg failed.
perl -I../.. ../../tests/filesys/extended/grow-file-size-persistence.ck tests/filesys/extended/grow-file-size-persistence tests/filesys/extended/grow-file-size-persistence.result
FAIL tests/filesys/extended/grow-file-size-persistence
Prerequisite test tests/filesys/extended/grow-file-size failed.
perl -I../.. ../../tests/filesys/extended/grow-root-lg-persistence.ck tests/filesys/extended/grow-root-lg-persistence tests/filesys/extended/grow-root-lg-persistence.result
FAIL tests/filesys/extended/grow-root-lg-persistence
Prerequisite test tests/filesys/extended/grow-root-lg failed.
perl -I../.. ../../tests/filesys/extended/grow-root-sm-persistence.ck tests/filesys/extended/grow-root-sm-persistence tests/filesys/extended/grow-root-sm-persistence.result
FAIL tests/filesys/extended/grow-root-sm-persistence
Prerequisite test tests/filesys/extended/grow-root-sm failed.
perl -I../.. ../../tests/filesys/extended/grow-seq-lg-persistence.ck tests/filesys/extended/grow-seq-lg-persistence tests/filesys/extended/grow-seq-lg-persistence.result
FAIL tests/filesys/extended/grow-seq-lg-persistence
Prerequisite test tests/filesys/extended/grow-seq-lg failed.
perl -I../.. ../../tests/filesys/extended/grow-seq-sm-persistence.ck tests/filesys/extended/grow-seq-sm-persistence tests/filesys/extended/grow-seq-sm-persistence.result
FAIL tests/filesys/extended/grow-seq-sm-persistence
Prerequisite test tests/filesys/extended/grow-seq-sm failed.
perl -I../.. ../../tests/filesys/extended/grow-sparse-persistence.ck tests/filesys/extended/grow-sparse-persistence tests/filesys/extended/grow-sparse-persistence.result
FAIL tests/filesys/extended/grow-sparse-persistence
Prerequisite test tests/filesys/extended/grow-sparse failed.
perl -I../.. ../../tests/filesys/extended/grow-tell-persistence.ck tests/filesys/extended/grow-tell-persistence tests/filesys/extended/grow-tell-persistence.result
FAIL tests/filesys/extended/grow-tell-persistence
Prerequisite test tests/filesys/extended/grow-tell failed.
perl -I../.. ../../tests/filesys/extended/grow-two-files-persistence.ck tests/filesys/extended/grow-two-files-persistence tests/filesys/extended/grow-two-files-persistence.result
FAIL tests/filesys/extended/grow-two-files-persistence
Prerequisite test tests/filesys/extended/grow-two-files failed.
perl -I../.. ../../tests/filesys/extended/syn-rw-persistence.ck tests/filesys/extended/syn-rw-persistence tests/filesys/extended/syn-rw-persistence.result
FAIL tests/filesys/extended/syn-rw-persistence
Prerequisite test tests/filesys/extended/syn-rw failed.
pass tests/userprog/args-none
pass tests/userprog/args-single
pass tests/userprog/args-multiple
pass tests/userprog/args-many
pass tests/userprog/args-dbl-space
pass tests/userprog/sc-bad-sp
pass tests/userprog/sc-bad-arg
pass tests/userprog/sc-boundary
pass tests/userprog/sc-boundary-2
pass tests/userprog/halt
pass tests/userprog/exit
pass tests/userprog/create-normal
pass tests/userprog/create-empty
pass tests/userprog/create-null
pass tests/userprog/create-bad-ptr
pass tests/userprog/create-long
pass tests/userprog/create-exists
pass tests/userprog/create-bound
pass tests/userprog/open-normal
pass tests/userprog/open-missing
pass tests/userprog/open-boundary
pass tests/userprog/open-empty
pass tests/userprog/open-null
pass tests/userprog/open-bad-ptr
pass tests/userprog/open-twice
pass tests/userprog/close-normal
pass tests/userprog/close-twice
pass tests/userprog/close-stdin
pass tests/userprog/close-stdout
pass tests/userprog/close-bad-fd
pass tests/userprog/read-normal
pass tests/userprog/read-bad-ptr
pass tests/userprog/read-boundary
pass tests/userprog/read-zero
pass tests/userprog/read-stdout
pass tests/userprog/read-bad-fd
pass tests/userprog/write-normal
pass tests/userprog/write-bad-ptr
pass tests/userprog/write-boundary
pass tests/userprog/write-zero
pass tests/userprog/write-stdin
pass tests/userprog/write-bad-fd
pass tests/userprog/exec-once
pass tests/userprog/exec-arg
pass tests/userprog/exec-multiple
pass tests/userprog/exec-missing
pass tests/userprog/exec-bad-ptr
pass tests/userprog/wait-simple
pass tests/userprog/wait-twice
pass tests/userprog/wait-killed
pass tests/userprog/wait-bad-pid
pass tests/userprog/multi-recurse
pass tests/userprog/multi-child-fd
pass tests/userprog/rox-simple
pass tests/userprog/rox-child
pass tests/userprog/rox-multichild
pass tests/userprog/bad-read
pass tests/userprog/bad-write
pass tests/userprog/bad-read2
pass tests/userprog/bad-write2
pass tests/userprog/bad-jump
pass tests/userprog/bad-jump2
FAIL tests/filesys/base/lg-create
FAIL tests/filesys/base/lg-full
FAIL tests/filesys/base/lg-random
FAIL tests/filesys/base/lg-seq-block
FAIL tests/filesys/base/lg-seq-random
pass tests/filesys/base/sm-create
pass tests/filesys/base/sm-full
pass tests/filesys/base/sm-random
pass tests/filesys/base/sm-seq-block
pass tests/filesys/base/sm-seq-random
pass tests/filesys/base/syn-read
pass tests/filesys/base/syn-remove
pass tests/filesys/base/syn-write
FAIL tests/filesys/extended/dir-empty-name
FAIL tests/filesys/extended/dir-mk-tree
FAIL tests/filesys/extended/dir-mkdir
FAIL tests/filesys/extended/dir-open
FAIL tests/filesys/extended/dir-over-file
FAIL tests/filesys/extended/dir-rm-cwd
FAIL tests/filesys/extended/dir-rm-parent
pass tests/filesys/extended/dir-rm-root
FAIL tests/filesys/extended/dir-rm-tree
FAIL tests/filesys/extended/dir-rmdir
FAIL tests/filesys/extended/dir-under-file
FAIL tests/filesys/extended/dir-vine
pass tests/filesys/extended/grow-create
FAIL tests/filesys/extended/grow-dir-lg
FAIL tests/filesys/extended/grow-file-size
FAIL tests/filesys/extended/grow-root-lg
FAIL tests/filesys/extended/grow-root-sm
FAIL tests/filesys/extended/grow-seq-lg
FAIL tests/filesys/extended/grow-seq-sm
FAIL tests/filesys/extended/grow-sparse
FAIL tests/filesys/extended/grow-tell
FAIL tests/filesys/extended/grow-two-files
FAIL tests/filesys/extended/syn-rw
FAIL tests/filesys/extended/dir-empty-name-persistence
FAIL tests/filesys/extended/dir-mk-tree-persistence
FAIL tests/filesys/extended/dir-mkdir-persistence
FAIL tests/filesys/extended/dir-open-persistence
FAIL tests/filesys/extended/dir-over-file-persistence
FAIL tests/filesys/extended/dir-rm-cwd-persistence
FAIL tests/filesys/extended/dir-rm-parent-persistence
FAIL tests/filesys/extended/dir-rm-root-persistence
FAIL tests/filesys/extended/dir-rm-tree-persistence
FAIL tests/filesys/extended/dir-rmdir-persistence
FAIL tests/filesys/extended/dir-under-file-persistence
FAIL tests/filesys/extended/dir-vine-persistence
FAIL tests/filesys/extended/grow-create-persistence
FAIL tests/filesys/extended/grow-dir-lg-persistence
FAIL tests/filesys/extended/grow-file-size-persistence
FAIL tests/filesys/extended/grow-root-lg-persistence
FAIL tests/filesys/extended/grow-root-sm-persistence
FAIL tests/filesys/extended/grow-seq-lg-persistence
FAIL tests/filesys/extended/grow-seq-sm-persistence
FAIL tests/filesys/extended/grow-sparse-persistence
FAIL tests/filesys/extended/grow-tell-persistence
FAIL tests/filesys/extended/grow-two-files-persistence
FAIL tests/filesys/extended/syn-rw-persistence
49 of 121 tests failed.
make[1]: Leaving directory `/home/jin/Desktop/pintos_filesys/pintos_2015/src/filesys/build'
